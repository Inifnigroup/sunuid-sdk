{"version":3,"file":"sunuid-sdk.min.js","sources":["../src/sunuid-sdk.js"],"sourcesContent":["/**\n * SunuID SDK - Package d'int√©gration pour partenaires\n * \n * @version 1.0.0\n * @author SunuID Team\n * @license MIT\n */\n\n(function(window) {\n    'use strict';\n\n    // Configuration par d√©faut\n    const DEFAULT_CONFIG = {\n        apiUrl: window.SunuIDConfig?.apiUrl || 'https://api.sunuid.fayma.sn',\n        clientId: null,\n        secretId: null,\n        type: 2, // Type par d√©faut (2 = authentification)\n        partnerName: null, // Nom du partenaire r√©cup√©r√© depuis l'API\n        theme: 'light',\n        language: 'fr',\n        autoRefresh: false, // D√©sactiv√© par d√©faut pour √©viter les appels r√©p√©titifs\n        refreshInterval: 30000, // 30 secondes\n        autoInit: false, // D√©sactiv√© par d√©faut pour √©viter les boucles\n        onSuccess: null,\n        onError: null,\n        onStatusUpdate: null,\n        onExpired: null,\n        // Nouvelles options de s√©curit√©\n        enableSecurityLogs: true,\n        validateInputs: true,\n        maxRetries: 3,\n        requestTimeout: 10000, // 10 secondes\n        // Options d'initialisation s√©curis√©e\n        secureInit: false,\n        secureInitUrl: (() => {\n            if (window.SunuIDConfig?.apiUrl?.includes('api.sunuid.fayma.sn')) {\n                return 'https://api.sunuid.fayma.sn/secure-init.php';\n            }\n            return window.SunuIDConfig?.apiUrl?.replace('/api', '') + '/secure-init.php' || 'https://api.sunuid.fayma.sn/secure-init.php';\n        })(),\n        token: null,\n        // Configuration pour forcer l'utilisation du serveur distant\n        forceRemoteServer: true,\n        useLocalFallback: false,\n        // Nouvelles options pour les callbacks\n        redirectAfterSuccess: null,\n        verifySignature: false,\n        tokenMaxAge: 300, // 5 minutes par d√©faut\n        onAuthenticationSuccess: null,\n        onAuthenticationError: null,\n        state: null\n    };\n\n    /**\n     * Classe principale SunuID\n     */\n    class SunuID {\n        constructor(config = {}) {\n            this.config = { ...DEFAULT_CONFIG, ...config };\n            this.qrCode = null;\n            this.refreshTimer = null;\n            this.isInitialized = false;\n            this.socket = null;\n            this.initPromise = null;\n            \n            // D√âSACTIV√â : Initialisation automatique pour √©viter les boucles\n            // L'utilisateur doit appeler init() manuellement\n            console.log('üîß SDK SunuID cr√©√© - Appelez init() manuellement');\n        }\n\n        /**\n         * Initialisation du SDK\n         */\n        async init() {\n            // Protection stricte contre les boucles\n            if (this.isInitialized) {\n                console.log('‚ö†Ô∏è SDK d√©j√† initialis√©, ignor√©');\n                return;\n            }\n            \n            // Protection contre les initialisations simultan√©es\n            if (this.initPromise) {\n                console.log('‚ö†Ô∏è Initialisation d√©j√† en cours, attente...');\n                return this.initPromise;\n            }\n            \n            // Protection contre les appels multiples rapides\n            if (this._initInProgress) {\n                console.log('‚ö†Ô∏è Initialisation en cours, ignor√©');\n                return;\n            }\n            \n            this._initInProgress = true;\n            this.initPromise = this._doInit();\n            \n            try {\n                await this.initPromise;\n            } finally {\n                this._initInProgress = false;\n            }\n            \n            return this.initPromise;\n        }\n\n        /**\n         * Initialisation interne du SDK\n         */\n        async _doInit() {\n            try {\n                // V√©rifier s'il y a un callback √† traiter en premier\n                if (this.handleCallback()) {\n                    console.log('‚úÖ Callback trait√©, initialisation termin√©e');\n                    return;\n                }\n\n                // Initialisation s√©curis√©e si activ√©e\n                if (this.config.secureInit) {\n                    await this.secureInit();\n                } else {\n                    // Validation s√©curis√©e des param√®tres\n                    if (this.config.validateInputs) {\n                        this.validateSecurityParams();\n                    }\n                }\n\n                // Log de s√©curit√© pour l'initialisation\n                this.logSecurityEvent('SDK_INIT_START', {\n                    apiUrl: this.config.apiUrl,\n                    type: this.config.type,\n                    secureInit: this.config.secureInit\n                });\n\n                // R√©cup√©rer les informations du partenaire depuis l'API\n                await this.fetchPartnerInfo();\n\n                // Obscurcir les credentials dans les logs\n                this.obfuscateCredentials();\n\n                this.isInitialized = true;\n                console.log('SunuID SDK initialis√© avec succ√®s');\n                console.log('üìã Configuration SDK:', {\n                    apiUrl: this.config.apiUrl,\n                    type: this.config.type,\n                    partnerName: this.config.partnerName,\n                    clientId: this.config.clientId ? '***' + this.config.clientId.slice(-4) : 'null',\n                    secretId: this.config.secretId ? '***' + this.config.secretId.slice(-4) : 'null',\n                    secureInit: this.config.secureInit,\n                    theme: this.config.theme\n                });\n                \n                this.logSecurityEvent('SDK_INIT_SUCCESS');\n                \n                // Initialiser la connexion WebSocket\n                this.initWebSocket();\n                \n            } catch (error) {\n                this.logSecurityEvent('SDK_INIT_ERROR', { error: error.message });\n                throw error;\n            }\n        }\n\n        /**\n         * Initialisation s√©curis√©e via PHP\n         */\n        async secureInit() {\n            try {\n                this.logSecurityEvent('SECURE_INIT_START');\n                \n                const initData = {\n                    type: this.config.type,\n                    partnerName: this.config.partnerName,\n                    theme: this.config.theme\n                };\n\n                const response = await fetch(this.config.secureInitUrl, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    body: JSON.stringify(initData)\n                });\n\n                if (!response.ok) {\n                    throw new Error(`Erreur HTTP: ${response.status}`);\n                }\n\n                const result = await response.json();\n                \n                console.log('üìã R√©ponse initialisation s√©curis√©e:', result);\n                \n                if (!result.success) {\n                    throw new Error(result.error || 'Erreur lors de l\\'initialisation s√©curis√©e');\n                }\n\n                // Stocker le token et les donn√©es s√©curis√©es\n                this.config.token = result.data.token;\n                this.config.apiUrl = result.data.api_url;\n                \n                // D√©coder le token pour r√©cup√©rer les credentials\n                const decodedToken = this.decodeSecureToken(result.data.token);\n                if (decodedToken) {\n                    this.config.clientId = decodedToken.client_id;\n                    this.config.secretId = decodedToken.secret_id;\n                } else {\n                    throw new Error('Impossible de d√©coder le token s√©curis√©');\n                }\n                \n                this.config.expiresIn = result.data.expires_in;\n                this.config.maxRequests = result.data.max_requests;\n                this.config.requestCount = 0;\n\n                this.logSecurityEvent('SECURE_INIT_SUCCESS', {\n                    expiresIn: result.data.expires_in,\n                    maxRequests: result.data.max_requests\n                });\n\n                console.log('‚úÖ Initialisation s√©curis√©e r√©ussie');\n                \n            } catch (error) {\n                this.logSecurityEvent('SECURE_INIT_ERROR', { error: error.message });\n                throw new Error(`√âchec de l'initialisation s√©curis√©e: ${error.message}`);\n            }\n        }\n\n        /**\n         * D√©coder le token s√©curis√©\n         */\n        decodeSecureToken(token) {\n            try {\n                const parts = token.split('.');\n                if (parts.length !== 2) {\n                    console.error('‚ùå Format de token invalide');\n                    return null;\n                }\n                \n                const [payload, signature] = parts;\n                \n                // D√©coder le payload (base64)\n                const decodedPayload = atob(payload);\n                const tokenData = JSON.parse(decodedPayload);\n                \n                // V√©rifier l'expiration\n                if (tokenData.exp && tokenData.exp < Date.now() / 1000) {\n                    console.error('‚ùå Token expir√©');\n                    return null;\n                }\n                \n                console.log('‚úÖ Token d√©cod√© avec succ√®s');\n                return tokenData;\n                \n            } catch (error) {\n                console.error('‚ùå Erreur d√©codage token:', error);\n                return null;\n            }\n        }\n\n        /**\n         * Initialiser la connexion WebSocket\n         */\n        initWebSocket() {\n            try {\n                // V√©rifier si Socket.IO est disponible\n                if (typeof io === 'undefined') {\n                    console.warn('‚ö†Ô∏è Socket.IO non disponible, WebSocket sera initialis√© plus tard');\n                    // R√©essayer apr√®s un d√©lai\n                    setTimeout(() => this.initWebSocket(), 1000);\n                    return;\n                }\n                \n                // Obtenir l'IP du client (simulation)\n                const ip = this.getClientIP();\n                \n                // Initialiser la connexion WebSocket si elle n'existe pas\n                if (!this.socket) {\n                    console.log('üåê Initialisation Socket.IO...');\n                    \n                    this.socket = io('wss://samasocket.fayma.sn:9443', {\n                        query: {\n                            token: this.config.clientId,\n                            type: 'web',\n                            userId: this.config.clientId,\n                            username: ip\n                        },\n                        transports: ['websocket', 'polling']\n                    });\n\n                    // Gestion des √©v√©nements WebSocket\n                    this.socket.on('connect', () => {\n                        console.log('üåê WebSocket connect√© avec succ√®s');\n                        console.log('üìä Socket ID:', this.socket.id);\n                        this.socket.connected = true;\n                    });\n\n                    this.socket.on('disconnect', (reason) => {\n                        console.log('‚ùå WebSocket d√©connect√©:', reason);\n                        this.socket.connected = false;\n                    });\n\n                    this.socket.on('connect_error', (error) => {\n                        console.error('‚ùå Erreur connexion WebSocket:', error);\n                        this.socket.connected = false;\n                    });\n\n                    // √âcouter les √©v√©nements sp√©cifiques\n                    this.socket.on('qr_status_update', (data) => {\n                        console.log('üì± Mise √† jour statut QR re√ßue:', data);\n                        this.handleQRStatusUpdate(data);\n                    });\n\n                    this.socket.on('qr_scan_success', (data) => {\n                        console.log('‚úÖ Scan QR r√©ussi re√ßu:', data);\n                        this.handleQRScanSuccess(data);\n                    });\n\n                    this.socket.on('qr_expired', (data) => {\n                        console.log('‚è∞ QR expir√© re√ßu:', data);\n                        this.handleQRExpired(data);\n                    });\n\n                    // √âcouter l'√©v√©nement qr_scan_initiated sp√©cifiquement\n                    this.socket.on('qr_scan_initiated', (data) => {\n                        console.log('üîç QR Scan Initiated re√ßu:', data);\n                        this.showQRLoader();\n                    });\n\n                    // √âcouter l'√©v√©nement message g√©n√©rique (fallback)\n                    this.socket.on('message', (data) => {\n                        console.log('üì® Message socket re√ßu:', data);\n                        if (data && data.type === 'qr_scan_initiated') {\n                            console.log('üîç QR Scan Initiated d√©tect√© dans message:', data);\n                            this.showQRLoader();\n                        }\n                    });\n\n                    // √âcouter tous les √©v√©nements socket pour le debugging\n                    this.socket.onAny = this.socket.onAny || function(eventName, callback) {\n                        // Fallback pour les versions de Socket.IO qui n'ont pas onAny\n                        console.log(`üåê Socket Event [${eventName}]:`, callback);\n                    };\n                    \n                    // Logger tous les √©v√©nements re√ßus\n                    this.socket.onAny((eventName, ...args) => {\n                        console.log(`üåê Socket Event [${eventName}]:`, args);\n                    });\n                } else {\n                    console.log('üåê WebSocket d√©j√† connect√©');\n                }\n            } catch (error) {\n                console.error('‚ùå Erreur initialisation WebSocket:', error);\n            }\n        }\n\n        /**\n         * Obtenir l'IP du client (simulation)\n         */\n        getClientIP() {\n            // Simulation - en production, vous pourriez utiliser un service d'IP\n            return '127.0.0.1';\n        }\n\n        /**\n         * Obtenir le nom du type √† partir du num√©ro\n         */\n        getTypeName(type) {\n            switch(type) {\n                case 1: return 'KYC';\n                case 2: return 'AUTH';\n                case 3: return 'SIGNATURE';\n                default: return `TYPE-${type}`;\n            }\n        }\n\n        /**\n         * Validation s√©curis√©e des param√®tres\n         */\n        validateSecurityParams() {\n            const errors = [];\n            \n            // Validation du clientId\n            if (!this.config.clientId || typeof this.config.clientId !== 'string') {\n                errors.push('clientId invalide ou manquant');\n            } else if (this.config.clientId.length < 10) {\n                errors.push('clientId trop court');\n            }\n            \n            // Validation du secretId\n            if (!this.config.secretId || typeof this.config.secretId !== 'string') {\n                errors.push('secretId invalide ou manquant');\n            } else if (this.config.secretId.length < 32) {\n                errors.push('secretId trop court (minimum 32 caract√®res)');\n            }\n            \n            // Validation de l'URL API\n            if (!this.config.apiUrl || !this.isValidUrl(this.config.apiUrl)) {\n                errors.push('apiUrl invalide');\n            }\n            \n            // Validation du type\n            if (![1, 2, 3].includes(this.config.type)) {\n                errors.push('type invalide (doit √™tre 1, 2 ou 3)');\n            }\n            \n            if (errors.length > 0) {\n                this.logSecurityEvent('VALIDATION_ERROR', { errors });\n                throw new Error(`Param√®tres de s√©curit√© invalides: ${errors.join(', ')}`);\n            }\n            \n            this.logSecurityEvent('VALIDATION_SUCCESS');\n        }\n\n        /**\n         * Validation d'URL s√©curis√©e\n         */\n        isValidUrl(string) {\n            try {\n                const url = new URL(string);\n                return url.protocol === 'https:' || url.protocol === 'http:';\n            } catch (_) {\n                return false;\n            }\n        }\n\n        /**\n         * Logs de s√©curit√©\n         */\n        logSecurityEvent(event, data = {}) {\n            if (!this.config.enableSecurityLogs) return;\n            \n            const securityLog = {\n                timestamp: new Date().toISOString(),\n                event: event,\n                data: data,\n                userAgent: navigator.userAgent,\n                url: window.location.href\n            };\n            \n            console.warn('üîí [SECURITY]', securityLog);\n            \n            // Stocker les logs de s√©curit√© (optionnel)\n            if (!window.SunuIDSecurityLogs) {\n                window.SunuIDSecurityLogs = [];\n            }\n            window.SunuIDSecurityLogs.push(securityLog);\n        }\n\n        /**\n         * Chiffrement simple des credentials (pour √©viter l'exposition en clair)\n         */\n        obfuscateCredentials() {\n            // Stocker les vraies valeurs pour les logs de s√©curit√©\n            this.config.originalClientId = this.config.clientId;\n            this.config.originalSecretId = this.config.secretId;\n            \n            // Cr√©er des versions obfusqu√©es pour l'affichage uniquement\n            if (this.config.clientId) {\n                this.config.clientIdDisplay = this.config.clientId.replace(/(.{3}).*(.{3})/, '$1***$2');\n            }\n            if (this.config.secretId) {\n                this.config.secretIdDisplay = this.config.secretId.replace(/(.{4}).*(.{4})/, '$1***$2');\n            }\n        }\n\n        /**\n         * Validation des entr√©es utilisateur\n         */\n        sanitizeInput(input) {\n            if (typeof input !== 'string') return input;\n            \n            // Protection contre les injections XSS basiques\n            return input\n                .replace(/[<>]/g, '') // Supprimer les balises HTML\n                .replace(/javascript:/gi, '') // Supprimer les protocoles dangereux\n                .trim();\n        }\n\n        /**\n         * G√©rer la mise √† jour du statut QR\n         */\n        handleQRStatusUpdate(data) {\n            console.log('üì± QR Status Update:', data);\n            if (this.config.onStatusUpdate) {\n                this.config.onStatusUpdate(data);\n            }\n        }\n\n        /**\n         * G√©rer le succ√®s du scan QR\n         */\n        handleQRScanSuccess(data) {\n            console.log('‚úÖ QR Scan Success re√ßu:', data);\n            \n            try {\n                // Extraire les donn√©es d'authentification du format WebSocket\n                const authData = this.extractAuthDataFromWebSocket(data);\n                \n                // Traiter l'authentification comme un callback\n                this.processAuthentication(authData);\n                \n                // Afficher un message de succ√®s\n                this.showSuccessMessage(authData);\n                \n                // Appeler le callback de succ√®s (pour compatibilit√©)\n                if (this.config.onSuccess) {\n                    this.config.onSuccess(authData);\n                }\n                \n                console.log('‚úÖ Authentification WebSocket trait√©e avec succ√®s');\n                \n            } catch (error) {\n                console.error('‚ùå Erreur lors du traitement WebSocket:', error);\n                \n                // Appeler le callback d'erreur\n                if (this.config.onAuthenticationError) {\n                    this.config.onAuthenticationError(error, data);\n                }\n            }\n        }\n\n        /**\n         * G√©rer l'expiration du QR\n         */\n        handleQRExpired(data) {\n            console.log('‚è∞ QR Expired:', data);\n            if (this.config.onExpired) {\n                this.config.onExpired(data);\n            }\n        }\n\n        /**\n         * √âmettre un √©v√©nement WebSocket\n         */\n        emitWebSocketEvent(event, data) {\n            if (this.socket && this.socket.connected) {\n                this.socket.emit(event, data);\n                console.log(`üì§ √âv√©nement WebSocket √©mis: ${event}`, data);\n            } else {\n                console.warn('‚ö†Ô∏è WebSocket non connect√©, impossible d\\'√©mettre l\\'√©v√©nement:', event);\n            }\n        }\n\n        /**\n         * Obtenir le statut de la connexion WebSocket\n         */\n        getWebSocketStatus() {\n            if (!this.socket) {\n                return 'not_initialized';\n            }\n            return this.socket.connected ? 'connected' : 'disconnected';\n        }\n\n        /**\n         * Forcer l'initialisation WebSocket (si Socket.IO devient disponible plus tard)\n         */\n        forceWebSocketInit() {\n            if (typeof io !== 'undefined' && !this.socket) {\n                console.log('üîÑ For√ßage de l\\'initialisation WebSocket...');\n                this.initWebSocket();\n            }\n        }\n\n        /**\n         * G√©n√©rer un QR code avec le type configur√©\n         */\n        async generateQR(containerId = 'sunuid-qr-container', options = {}) {\n            // Attendre l'initialisation si n√©cessaire\n            if (this.initPromise) {\n                await this.initPromise;\n                this.initPromise = null;\n            }\n            \n            if (!this.isInitialized) {\n                throw new Error('SunuID: SDK non initialis√©');\n            }\n            \n            console.log('üéØ generateQR appel√© avec containerId:', containerId);\n            \n            // Attendre que les connexions soient pr√™tes\n            console.log('üîç Attente connexions API et WebSocket...');\n            try {\n                const connectionStatus = await this.waitForConnections(5000); // 5 secondes max\n                console.log('‚úÖ Connexions pr√™tes:', connectionStatus);\n            } catch (connectionError) {\n                console.error('‚ùå Erreur connexions:', connectionError.message);\n                throw new Error('Connexions non disponibles - Impossible de g√©n√©rer le QR code');\n            }\n\n            try {\n                // Utiliser uniquement le socketID comme contenu du QR\n                const socketId = this.socket ? this.socket.id : 'timeout-socket-id';\n                const qrContent = socketId;\n                \n                console.log('üìÑ Contenu QR pr√©par√©:', qrContent);\n                console.log('üîå Socket ID:', socketId);\n                \n                                    // G√©n√©rer le QR avec le contenu complet\n                    const partnerName = this.config.partnerName || 'Partner_unknown';\n                    const response = await this.makeRequest('/qr-generate', {\n                        type: this.config.type,\n                        data: qrContent, // Essayer data au lieu de content\n                        label: `${this.getTypeName(this.config.type)} ${partnerName}`, // Label du QR avec nom du partenaire\n                        ...options\n                    });\n\n                if (response.success) {\n                    // Debug: Afficher la structure compl√®te de la r√©ponse\n                    console.log('üìã R√©ponse QR API compl√®te:', response);\n                    console.log('üìã Structure response.data:', response.data);\n                    \n                    // Construire l'URL compl√®te du QR code\n                    let qrImageUrl = response.data.qrCodeUrl;\n                    \n                    // Si l'URL est relative, la rendre absolue\n                    if (qrImageUrl && qrImageUrl.startsWith('/')) {\n                        qrImageUrl = `${this.config.apiUrl}${qrImageUrl}`;\n                    }\n                    \n                    // V√©rifier si l'URL du QR code existe\n                    if (!qrImageUrl) {\n                        console.warn('‚ö†Ô∏è qrCodeUrl non trouv√© dans la r√©ponse, recherche d\\'alternatives...');\n                        \n                        // Essayer d'autres champs possibles\n                        qrImageUrl = response.data.qr_url || \n                                    response.data.qrUrl || \n                                    response.data.url || \n                                    response.data.image_url ||\n                                    response.data.imageUrl;\n                        \n                        if (qrImageUrl) {\n                            console.log('‚úÖ URL QR trouv√©e dans un champ alternatif:', qrImageUrl);\n                        } else {\n                            console.error('‚ùå Aucune URL QR trouv√©e dans la r√©ponse');\n                            throw new Error('URL du QR code non trouv√©e dans la r√©ponse API');\n                        }\n                    }\n                    \n                    this.currentQRUrl = qrImageUrl;\n                    \n                    console.log('‚úÖ QR code g√©n√©r√© par API principale:', qrImageUrl);\n                    console.log('üìÑ Contenu QR final:', qrContent);\n                    console.log('üè∑Ô∏è Label QR:', response.data.label || 'N/A');\n                    console.log('üÜî Session ID:', response.data.sessionId || 'N/A');\n                    \n                    // Afficher le QR code\n                    this.displayQRCode(containerId, qrImageUrl, this.config.type, options);\n                    \n                    this.startAutoRefresh(containerId, this.config.type, options);\n                    \n                    // √âmettre un √©v√©nement WebSocket pour la g√©n√©ration du QR\n                    this.emitWebSocketEvent('qr_generated', {\n                        type: this.config.type,\n                        qrCodeUrl: qrImageUrl,\n                        socketId: socketId,\n                        qrContent: qrContent,\n                        label: response.data.label,\n                        sessionId: response.data.sessionId,\n                        timestamp: Date.now()\n                    });\n                    \n                    return {\n                        ...response.data,\n                        qrCodeUrl: qrImageUrl,\n                        qrContent: qrContent,\n                        label: response.data.label,\n                        sessionId: response.data.sessionId\n                    };\n                } else {\n                    throw new Error(response.message || 'Erreur lors de la g√©n√©ration du QR code');\n                }\n            } catch (error) {\n                console.error('Erreur API d√©tect√©e:', error.message);\n                console.error('Stack trace complet:', error.stack);\n                console.error('Configuration SDK:', {\n                    apiUrl: this.config.apiUrl,\n                    type: this.config.type,\n                    secureInit: this.config.secureInit,\n                    clientId: this.config.clientId ? '***' + this.config.clientId.slice(-4) : 'null',\n                    secretId: this.config.secretId ? '***' + this.config.secretId.slice(-4) : 'null'\n                });\n                \n                // Fallback vers le service local seulement si activ√©\n                if (this.config.useLocalFallback) {\n                    console.log('üîç V√©rification fallback local...');\n                    console.log('üîç Hostname:', window.location.hostname);\n                    console.log('üîç Protocol:', window.location.protocol);\n                    console.log('üîç URL compl√®te:', window.location.href);\n                    \n                    const isLocal = window.location.hostname === 'localhost' || \n                                   window.location.hostname === '127.0.0.1' || \n                                   window.location.protocol === 'file:';\n                    \n                    console.log('üîç Est local:', isLocal);\n                    \n                    if (isLocal) {\n                        console.log('üîÑ Tentative fallback vers service QR local...');\n                        console.log('‚ùå Fallback local non impl√©ment√© - utilisation serveur distant uniquement');\n                    } else {\n                        console.log('‚ùå Pas en local, pas de fallback');\n                    }\n                } else {\n                    console.log('üîí Fallback local d√©sactiv√©, utilisation serveur distant uniquement');\n                }\n                \n                console.log('Affichage du message \"Service non disponible\" pour type ' + this.config.type);\n                this.displayServiceUnavailable(containerId, this.config.type);\n                throw new Error('Service non disponible');\n            }\n        }\n\n\n\n        /**\n         * G√©n√©rer un QR code avec un type personnalis√©\n         */\n        async generateCustomQR(containerId, type, options = {}) {\n            // Attendre l'initialisation si n√©cessaire\n            if (this.initPromise) {\n                await this.initPromise;\n                this.initPromise = null;\n            }\n            \n            if (!this.isInitialized) {\n                throw new Error('SunuID: SDK non initialis√©');\n            }\n\n            try {\n                const response = await this.makeRequest('/qr-generate', {\n                    type: type, // Type personnalis√© (1, 2, 3, etc.)\n                    ...options\n                });\n\n                if (response.success) {\n                    // Construire l'URL compl√®te de l'image QR avec la base URL pour les images\n                    const imageBaseUrl = 'https://sunuid.fayma.sn';\n                    const qrImageUrl = `${imageBaseUrl}${response.data.qrcode}`;\n                    this.displayQRCode(containerId, qrImageUrl, type, options);\n                    \n                    // Le QR code est d√©j√† g√©n√©r√© par l'API principale\n                    console.log('‚úÖ QR code personnalis√© g√©n√©r√© par API principale:', qrImageUrl);\n                    console.log('üìÑ Code de session:', response.data.code);\n                    console.log('üÜî Service ID:', response.data.service_id);\n                    \n                    this.startAutoRefresh(containerId, type, options);\n                    return {\n                        ...response.data,\n                        qrCodeUrl: qrImageUrl,\n                        sessionId: response.data.service_id\n                    };\n                } else {\n                    throw new Error(response.message || 'Erreur lors de la g√©n√©ration du QR code');\n                }\n            } catch (error) {\n                console.error('Erreur API d√©tect√©e:', error.message);\n                console.error('Stack trace complet:', error.stack);\n                console.error('Configuration SDK (Custom):', {\n                    apiUrl: this.config.apiUrl,\n                    type: type,\n                    secureInit: this.config.secureInit,\n                    clientId: this.config.clientId ? '***' + this.config.clientId.slice(-4) : 'null',\n                    secretId: this.config.secretId ? '***' + this.config.secretId.slice(-4) : 'null'\n                });\n                console.log('Affichage du message \"Service non disponible\" pour type ' + type);\n                this.displayServiceUnavailable(containerId, type);\n                throw new Error('Service non disponible');\n            }\n        }\n\n        // Alias pour maintenir la compatibilit√©\n        async generateAuthQR(containerId, options = {}) {\n            return this.generateQR(containerId, options);\n        }\n\n        async generateKYCQR(containerId, options = {}) {\n            // Sauvegarder le type actuel\n            const originalType = this.config.type;\n            // Changer temporairement le type pour KYC\n            this.config.type = 1;\n            try {\n                return await this.generateQR(containerId, options);\n            } finally {\n                // Restaurer le type original\n                this.config.type = originalType;\n            }\n        }\n\n        async generateSignatureQR(containerId, options = {}) {\n            // Sauvegarder le type actuel\n            const originalType = this.config.type;\n            // Changer temporairement le type pour Signature\n            this.config.type = 3;\n            try {\n                return await this.generateQR(containerId, options);\n            } finally {\n                // Restaurer le type original\n                this.config.type = originalType;\n            }\n        }\n\n        /**\n         * V√©rifier le statut d'un QR code\n         */\n        async checkQRStatus(sessionId) {\n            if (!this.isInitialized) {\n                throw new Error('SunuID: SDK non initialis√©');\n            }\n\n            try {\n                const response = await this.makeRequest('/qr-status', {\n                    serviceId: sessionId\n                });\n\n                if (response.success) {\n                    return response.data;\n                } else {\n                    throw new Error(response.message || 'Erreur lors de la v√©rification du statut');\n                }\n            } catch (error) {\n                this.handleError(error);\n                throw error;\n            }\n        }\n\n        /**\n         * G√©n√©rer un QR code avec un contenu sp√©cifique\n         */\n        async generateQRWithContent(content, containerId, type, options = {}) {\n            console.log('üé® G√©n√©ration QR avec contenu:', content);\n            \n            try {\n                // Essayer d'abord le service QR local\n                if (window.location.hostname === 'localhost' || \n                    window.location.hostname === '127.0.0.1' || \n                    window.location.protocol === 'file:') {\n                    \n                    console.log('üè† Utilisation service QR local...');\n                    const localQRUrl = await this.generateQRLocal(content, containerId, type, options);\n                    if (localQRUrl) {\n                        return localQRUrl;\n                    }\n                }\n                \n                // Fallback vers le service QR distant\n                console.log('üåê Utilisation service QR distant...');\n                return await this.generateQRRemote(content, containerId, type, options);\n                \n            } catch (error) {\n                console.error('‚ùå Erreur g√©n√©ration QR:', error);\n                // Fallback vers affichage simple du contenu\n                this.displayQRContent(containerId, content, type, options);\n                return null;\n            }\n        }\n        \n        /**\n         * G√©n√©rer QR code avec service local\n         */\n        async generateQRLocal(content, containerId, type, options = {}) {\n            try {\n                const response = await fetch('http://localhost:8000/api/generate/text', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/x-www-form-urlencoded'\n                    },\n                    body: `text=${encodeURIComponent(content)}&size=300`\n                });\n                \n                if (response.ok) {\n                    const data = await response.json();\n                    const qrUrl = `data:image/png;base64,${data.qrcode}`;\n                    this.displayQRCode(containerId, qrUrl, type, options);\n                    return qrUrl;\n                }\n            } catch (error) {\n                console.log('‚ùå Service QR local non disponible:', error.message);\n            }\n            return null;\n        }\n        \n        /**\n         * G√©n√©rer QR code avec service distant\n         */\n        async generateQRRemote(content, containerId, type, options = {}) {\n            try {\n                const response = await fetch('https://api.sunuid.fayma.sn/qr-generate', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        text: content,\n                        size: 300,\n                        type: type\n                    })\n                });\n                \n                if (response.ok) {\n                    const data = await response.json();\n                    const qrUrl = `data:image/png;base64,${data.qrcode}`;\n                    this.displayQRCode(containerId, qrUrl, type, options);\n                    return qrUrl;\n                }\n            } catch (error) {\n                console.error('‚ùå Erreur service QR distant:', error);\n            }\n            \n            // Fallback vers affichage du contenu\n            this.displayQRContent(containerId, content, type, options);\n            return null;\n        }\n        \n        /**\n         * Afficher le contenu QR en texte (fallback)\n         */\n        displayQRContent(containerId, content, type, options = {}) {\n            const container = document.getElementById(containerId);\n            if (!container) {\n                throw new Error(`Conteneur avec l'ID \"${containerId}\" non trouv√©`);\n            }\n\n            const typeName = this.getTypeName(type);\n            container.innerHTML = `\n                <div class=\"sunuid-qr-code\">\n                    <div class=\"sunuid-qr-header\">\n                        <h3>${typeName}</h3>\n                    </div>\n                    <div class=\"sunuid-qr-content\" style=\"text-align: center; padding: 20px; background: #f8f9fa; border: 1px solid #dee2e6; border-radius: 5px; margin: 10px 0;\">\n                        <p><strong>Contenu QR Code:</strong></p>\n                        <p style=\"font-family: monospace; font-size: 14px; word-break: break-all;\">${content}</p>\n                    </div>\n                    <div class=\"sunuid-qr-instructions\">\n                        <p>Contenu QR g√©n√©r√© avec le format: {type}-{code}-{socketid}</p>\n                    </div>\n                </div>\n            `;\n            \n            console.log('‚úÖ Contenu QR affich√©:', content);\n        }\n        \n        /**\n         * Afficher un QR code dans un conteneur\n         */\n        displayQRCode(containerId, qrUrl, type, options = {}) {\n            const container = document.getElementById(containerId);\n            if (!container) {\n                throw new Error(`Conteneur avec l'ID \"${containerId}\" non trouv√©`);\n            }\n\n            // Nettoyer le conteneur\n            container.innerHTML = '';\n\n            // Cr√©er l'√©l√©ment QR code\n            const qrElement = document.createElement('div');\n            qrElement.className = 'sunuid-qr-code';\n            \n            // Afficher l'image QR avec les informations\n            const typeName = this.getTypeName(type);\n            qrElement.innerHTML = `\n                <div class=\"sunuid-qr-header\">\n                    <h3>${type === 1 ? 'V√©rification KYC' : type === 2 ? 'Authentification' : type === 3 ? 'Signature' : 'Service Type ' + type}</h3>\n                </div>\n                <div class=\"sunuid-qr-image\">\n                    <img src=\"${qrUrl}\" alt=\"QR Code ${typeName}\" style=\"max-width: 300px; border: 1px solid #ddd; border-radius: 5px;\" />\n                </div>\n               \n            `;\n\n            container.appendChild(qrElement);\n\n            // Appliquer le th√®me\n            this.applyTheme(options.theme || this.config.theme);\n            \n            console.log('‚úÖ QR code affich√©:', qrUrl);\n        }\n\n        /**\n         * G√©n√©rer un QR code personnalis√© avec PHP Endroid\n         */\n        async generateCustomQRCode(content, label, options = {}) {\n            console.log('üé® D√©but g√©n√©ration QR personnalis√©...');\n            console.log('üìÑ Contenu:', content);\n            console.log('üè∑Ô∏è Label:', label);\n            \n            // Chercher le conteneur QR\n            let qrContainer = document.getElementById('sunuid-qr-container');\n            if (!qrContainer) {\n                qrContainer = document.getElementById('qr-container');\n            }\n            if (!qrContainer) {\n                console.error('‚ùå QR container not found');\n                return;\n            }\n            \n            console.log('‚úÖ QR container trouv√©');\n\n            // Nettoyer le conteneur\n            qrContainer.innerHTML = '<div style=\"text-align: center; padding: 20px;\"><p>G√©n√©ration QR code...</p></div>';\n\n                         try {\n                 // Utiliser directement l'API principale (plus fiable)\n                 console.log('üé® Tentative g√©n√©ration via API principale...');\n                 await this.generateQRPHP(content, label, qrContainer);\n                 console.log('‚úÖ QR code g√©n√©r√© avec succ√®s');\n                 \n             } catch (error) {\n                 console.error('‚ùå Erreur g√©n√©ration API:', error);\n                 \n                 // Fallback final : image par d√©faut\n                 console.log('‚ö†Ô∏è Affichage image par d√©faut');\n                 this.displayDefaultQR(qrContainer, content, label);\n             }\n        }\n\n        /**\n         * G√©n√©rer un QR code c√¥t√© client (m√©thode principale)\n         */\n        async generateQRClientSide(content, label, qrContainer) {\n            // Charger QRCode si n√©cessaire\n            await this.ensureQRCodeLibrary();\n            \n            if (typeof QRCode === 'undefined') {\n                throw new Error('QRCode library non disponible');\n            }\n            \n            // Cr√©er un canvas\n            const canvas = document.createElement('canvas');\n            canvas.width = 300;\n            canvas.height = 320;\n            const ctx = canvas.getContext('2d');\n            \n            // Fond blanc\n            ctx.fillStyle = '#FFFFFF';\n            ctx.fillRect(0, 0, 300, 320);\n            \n            // G√©n√©rer le QR code\n            return new Promise((resolve, reject) => {\n                QRCode.toCanvas(canvas, content, {\n                    width: 280,\n                    margin: 10,\n                    color: {\n                        dark: '#000000',\n                        light: '#FFFFFF'\n                    }\n                }, (error) => {\n                    if (error) {\n                        reject(error);\n                        return;\n                    }\n                    \n                    // Ajouter le label\n                    ctx.fillStyle = '#333333';\n                    ctx.font = 'bold 14px Arial';\n                    ctx.textAlign = 'center';\n                    ctx.fillText(label, 150, 305);\n                    \n                    // Convertir en data URL\n                    const dataUrl = canvas.toDataURL('image/png');\n                    \n                    // Stocker l'URL\n                    this.currentQRUrl = dataUrl;\n                    \n                    // Afficher le QR code\n                    qrContainer.innerHTML = `\n                        <div style=\"text-align: center; padding: 20px;\">\n                            <img src=\"${dataUrl}\" alt=\"QR Code\" style=\"max-width: 300px; border: 2px solid #ddd; border-radius: 10px;\">\n                        </div>\n                    `;\n                    \n                    // Afficher les instructions\n                    this.showQRInstructions(qrContainer);\n                    \n                    resolve();\n                });\n            });\n        }\n\n        /**\n         * G√©n√©rer un QR code via endpoint PHP (fallback)\n         */\n        async generateQRPHP(content, label, qrContainer) {\n                         // Construire l'URL - Utiliser l'API principale qui fonctionne\n             let qrGeneratorUrl;\n             if (this.config.forceRemoteServer) {\n                 qrGeneratorUrl = 'https://api.sunuid.fayma.sn/qr-generate';\n             } else if (this.config.apiUrl.includes('api.sunuid.fayma.sn')) {\n                 qrGeneratorUrl = 'https://api.sunuid.fayma.sn/qr-generate';\n             } else if (this.config.apiUrl.includes('localhost') || this.config.apiUrl.includes('127.0.0.1')) {\n                 qrGeneratorUrl = 'http://localhost:8000/api/generate/text';\n             } else {\n                 qrGeneratorUrl = this.config.apiUrl + '/qr-generate';\n             }\n            \n            console.log('üîó URL QR Generator:', qrGeneratorUrl);\n            \n                         // Adapter le format selon l'URL\n             let requestBody;\n             let contentType;\n             \n             if (qrGeneratorUrl.includes('localhost:8000')) {\n                 // Service local - format form-data\n                 contentType = 'application/x-www-form-urlencoded';\n                 requestBody = new URLSearchParams({\n                     text: content,\n                     size: 300,\n                     margin: 10,\n                     foreground_color: '000000',\n                     background_color: 'FFFFFF'\n                 });\n             } else {\n                 // Service distant - format JSON avec les param√®tres de l'API principale\n                 contentType = 'application/json';\n                 requestBody = JSON.stringify({\n                     type: this.config.type,\n                     client_id: this.config.clientId,\n                     secret_id: this.config.secretId,\n                     content: content,\n                     label: label\n                 });\n             }\n             \n             const response = await fetch(qrGeneratorUrl, {\n                 method: 'POST',\n                 headers: {\n                     'Content-Type': contentType,\n                     'Accept': 'application/json'\n                 },\n                 body: requestBody\n             });\n            \n            if (!response.ok) {\n                throw new Error(`Erreur HTTP: ${response.status}`);\n            }\n            \n            const responseData = await response.json();\n            \n                         if (!responseData.success) {\n                 throw new Error(`Erreur QR: ${responseData.error}`);\n             }\n             \n             // Adapter selon le format de r√©ponse\n             let qrImageUrl;\n             if (qrGeneratorUrl.includes('localhost:8000')) {\n                 // Service local\n                 qrImageUrl = responseData.data_uri;\n             } else {\n                 // Service distant - utiliser le format de l'API principale\n                 const imageBaseUrl = 'https://sunuid.fayma.sn';\n                 qrImageUrl = `${imageBaseUrl}${responseData.data.qrcode}`;\n             }\n             \n             // Stocker l'URL\n             this.currentQRUrl = qrImageUrl;\n             \n             // Afficher le QR code\n             qrContainer.innerHTML = `\n                 <div style=\"text-align: center; padding: 20px;\">\n                     <img src=\"${qrImageUrl}\" alt=\"QR Code\" style=\"max-width: 300px; border: 2px solid #ddd; border-radius: 10px;\">\n                 </div>\n             `;\n            \n            // Afficher les instructions\n            this.showQRInstructions(qrContainer);\n        }\n\n        /**\n         * Afficher une image QR par d√©faut (fallback final)\n         */\n        displayDefaultQR(qrContainer, content, label) {\n            qrContainer.innerHTML = `\n                <div style=\"text-align: center; padding: 20px; color: #666;\">\n                    <div style=\"width: 300px; height: 300px; background: #f0f0f0; border: 2px solid #ddd; border-radius: 10px; display: flex; align-items: center; justify-content: center; margin: 0 auto;\">\n                        <div>\n                            <p style=\"font-size: 24px; margin: 0;\">üì±</p>\n                            <p style=\"font-size: 14px; margin: 10px 0 0 0;\">QR Code</p>\n                        </div>\n                    </div>\n                    <p style=\"margin-top: 10px; font-size: 12px;\">${label}</p>\n                    <p style=\"font-size: 10px; color: #999; margin-top: 5px;\">Contenu: ${content}</p>\n                </div>\n            `;\n        }\n\n        /**\n         * S'assurer que la biblioth√®que QRCode est disponible\n         */\n        async ensureQRCodeLibrary() {\n            if (typeof QRCode !== 'undefined') {\n                console.log('‚úÖ QRCode library d√©j√† disponible');\n                return true;\n            }\n            \n            console.log('üì¶ Chargement QRCode library...');\n            \n            return new Promise((resolve, reject) => {\n                const script = document.createElement('script');\n                script.src = 'https://cdn.jsdelivr.net/npm/qrcode@1.5.3/lib/browser.min.js';\n                script.onload = () => {\n                    setTimeout(() => {\n                        if (typeof QRCode !== 'undefined') {\n                            console.log('‚úÖ QRCode library charg√©e');\n                            resolve(true);\n                        } else {\n                            console.error('‚ùå QRCode non disponible apr√®s chargement');\n                            reject(new Error('QRCode library non disponible apr√®s chargement'));\n                        }\n                    }, 200);\n                };\n                script.onerror = () => {\n                    console.error('‚ùå Erreur chargement QRCode library');\n                    reject(new Error('Erreur chargement QRCode library'));\n                };\n                document.head.appendChild(script);\n            });\n        }\n\n        /**\n         * Afficher les instructions pour le QR code\n         */\n        showQRInstructions(qrContainer) {\n            const instructionsElement = qrContainer.parentElement.querySelector('.sunuid-qr-instructions');\n            const statusElement = qrContainer.parentElement.querySelector('.sunuid-qr-status');\n            \n            if (instructionsElement) {\n                instructionsElement.style.display = 'block';\n                instructionsElement.classList.add('sunuid-qr-ready');\n            }\n            if (statusElement) {\n                statusElement.style.display = 'block';\n                statusElement.classList.add('sunuid-qr-ready');\n            }\n        }\n\n        /**\n         * Ajouter le logo au centre du QR code\n         */\n        addLogoToCenter(ctx, x, y, width, height) {\n            try {\n                // Cr√©er une image pour le logo\n                const logo = new Image();\n                logo.onload = () => {\n                    const logoSize = 40;\n                    const logoX = x + (width - logoSize) / 2;\n                    const logoY = y + (width - logoSize) / 2;\n\n                    // Dessiner un fond blanc pour le logo\n                    ctx.fillStyle = 'white';\n                    ctx.fillRect(logoX - 2, logoY - 2, logoSize + 4, logoSize + 4);\n\n                    // Dessiner le logo\n                    ctx.drawImage(logo, logoX, logoY, logoSize, logoSize);\n                };\n                logo.src = 'src/logoqr.png';\n            } catch (error) {\n                console.warn('Logo non disponible:', error);\n            }\n        }\n\n        /**\n         * Afficher l'image de fallback\n         */\n        displayFallbackImage() {\n            console.log('‚ö†Ô∏è Affichage de l\\'image de fallback');\n            const qrContainer = document.getElementById('sunuid-qr-container');\n            if (qrContainer) {\n                qrContainer.innerHTML = `\n                    <div style=\"text-align: center; padding: 20px; color: #666;\">\n                        <p>‚ö†Ô∏è G√©n√©ration QR personnalis√© non disponible</p>\n                        <p>Utilisation de l'image par d√©faut</p>\n                        <p><strong>Debug:</strong> QRCode disponible: ${typeof QRCode !== 'undefined'}</p>\n                        <p><strong>Debug:</strong> Container trouv√©: ${qrContainer !== null}</p>\n                    </div>\n                `;\n            }\n        }\n\n        /**\n         * Afficher \"Service non disponible\"\n         */\n        displayServiceUnavailable(containerId, type) {\n            console.log(`displayServiceUnavailable appel√©e pour ${containerId}, type: ${type}`);\n            const container = document.getElementById(containerId);\n            if (!container) {\n                console.error(`Container ${containerId} non trouv√©`);\n                return;\n            }\n\n            container.innerHTML = `\n                <div class=\"sunuid-service-unavailable\" style=\"\n                    text-align: center;\n                    padding: 40px 20px;\n                    background: #f8f9fa;\n                    border: 2px dashed #dee2e6;\n                    border-radius: 10px;\n                    color: #6c757d;\n                    font-family: Arial, sans-serif;\n                \">\n                    <div style=\"font-size: 48px; margin-bottom: 20px;\">‚ö†Ô∏è</div>\n                    <h3 style=\"margin: 0 0 10px 0; color: #495057;\">Service Non Disponible</h3>\n                    <p style=\"margin: 0; font-size: 14px;\">\n                        Le service d'authentification est temporairement indisponible.<br>\n                        Veuillez r√©essayer plus tard.\n                    </p>\n                    <div style=\"margin-top: 20px; font-size: 12px; color: #adb5bd;\">\n                        Type: ${String(type).toUpperCase()}\n                    </div>\n                </div>\n            `;\n        }\n\n        /**\n         * Rafra√Æchir un QR code\n         */\n        async refreshQR(containerId, options = {}) {\n            try {\n                // V√©rifier si on a d√©j√† un QR code g√©n√©r√©\n                if (this.currentQRUrl) {\n                    console.log('üîÑ V√©rification du statut du QR code existant...');\n                    \n                    // Option 1: V√©rifier le statut du QR code via l'API\n                    // (√† impl√©menter si l'API le supporte)\n                    \n                    // Option 2: R√©g√©n√©rer le QR code seulement si n√©cessaire\n                    // Pour l'instant, on r√©g√©n√®re pour s'assurer qu'il est √† jour\n                    const result = await this.generateQR(containerId, options);\n                    return result;\n                } else {\n                    console.log('üîÑ Pas de QR code existant, g√©n√©ration d\\'un nouveau...');\n                    const result = await this.generateQR(containerId, options);\n                    return result;\n                }\n            } catch (error) {\n                console.error('Erreur lors du rafra√Æchissement:', error.message);\n                this.displayServiceUnavailable(containerId, this.config.type);\n                throw error;\n            }\n        }\n\n        /**\n         * D√©marrer le rafra√Æchissement automatique\n         */\n        startAutoRefresh(containerId, type, options) {\n            if (!this.config.autoRefresh) return;\n\n            // Arr√™ter le timer existant s'il y en a un\n            if (this.refreshTimer) {\n                clearInterval(this.refreshTimer);\n                console.log('üîÑ Timer de rafra√Æchissement pr√©c√©dent arr√™t√©');\n            }\n\n            this.refreshTimer = setInterval(async () => {\n                try {\n                    console.log('üîÑ Rafra√Æchissement automatique du QR code...');\n                    await this.refreshQR(containerId, type, options);\n                } catch (error) {\n                    console.warn('Erreur lors du rafra√Æchissement automatique:', error);\n                }\n            }, this.config.refreshInterval);\n            \n            console.log(`üîÑ Timer de rafra√Æchissement d√©marr√© (${this.config.refreshInterval}ms)`);\n        }\n\n        /**\n         * D√©marrer le timer de compte √† rebours\n         */\n\n\n        /**\n         * Effectuer une requ√™te API s√©curis√©e\n         */\n        async makeRequest(endpoint, data) {\n            // Validation de s√©curit√©\n            if (!this.isInitialized) {\n                this.logSecurityEvent('REQUEST_BEFORE_INIT', { endpoint });\n                throw new Error('SDK non initialis√©');\n            }\n\n            // V√©rifier les limites de requ√™tes pour l'initialisation s√©curis√©e\n            if (this.config.secureInit) {\n                this.config.requestCount++;\n                if (this.config.requestCount > this.config.maxRequests) {\n                    this.logSecurityEvent('API_REQUEST_LIMIT_EXCEEDED', { \n                        requestCount: this.config.requestCount,\n                        maxRequests: this.config.maxRequests \n                    });\n                    throw new Error('Limite de requ√™tes d√©pass√©e');\n                }\n            }\n\n            // Sanitisation des donn√©es\n            const sanitizedData = this.sanitizeRequestData(data);\n            \n            // Debug: Afficher les donn√©es envoy√©es\n            console.log('üîç Debug makeRequest - endpoint:', endpoint);\n            console.log('üîç Debug makeRequest - apiUrl:', this.config.apiUrl);\n            console.log('üîç Debug makeRequest - url:', `${this.config.apiUrl}${endpoint}`);\n            console.log('üîç Debug makeRequest - data:', JSON.stringify(sanitizedData, null, 2));\n            console.log('üîç Debug makeRequest - secureInit:', this.config.secureInit);\n            console.log('üîç Debug makeRequest - isInitialized:', this.isInitialized);\n            \n            // Utiliser l'endpoint depuis la configuration si disponible\n            const endpointPath = window.SunuIDConfig?.endpoints?.[endpoint.replace('/', '')] || endpoint;\n            const url = `${this.config.apiUrl}${endpointPath}`;\n            \n            // Debug: Afficher l'URL finale\n            console.log('üîç URL finale construite:', url);\n            console.log('üîç EndpointPath:', endpointPath);\n            console.log('üîç SunuIDConfig endpoints:', JSON.stringify(window.SunuIDConfig?.endpoints));\n            \n            // Log de s√©curit√© pour la requ√™te\n            this.logSecurityEvent('API_REQUEST_START', {\n                endpoint: endpointPath,\n                url: url,\n                dataKeys: Object.keys(sanitizedData),\n                secureInit: this.config.secureInit\n            });\n            \n            let retryCount = 0;\n            const maxRetries = this.config.maxRetries;\n            \n            while (retryCount <= maxRetries) {\n                try {\n                    const controller = new AbortController();\n                    const timeoutId = setTimeout(() => controller.abort(), this.config.requestTimeout);\n                    \n                    // Headers minimaux (API SunuID n'accepte que les headers essentiels)\n                    const headers = {\n                        'Content-Type': 'application/json'\n                    };\n\n                    // Note: En mode s√©curis√©, les credentials sont dans le body\n                    // Pas besoin d'ajouter de header sp√©cial pour √©viter les probl√®mes CORS\n                    // if (this.config.secureInit && this.config.token) {\n                    //     headers['X-Secure-Token'] = this.config.token;\n                    // }\n                    \n                    const response = await fetch(url, {\n                        method: 'POST',\n                        headers: headers,\n                        body: JSON.stringify(sanitizedData),\n                        signal: controller.signal\n                    });\n\n                    clearTimeout(timeoutId);\n\n                    if (!response.ok) {\n                        const errorText = await response.text();\n                        let errorData;\n                        try {\n                            errorData = JSON.parse(errorText);\n                        } catch (e) {\n                            errorData = { message: errorText };\n                        }\n                        \n                        this.logSecurityEvent('API_REQUEST_ERROR', {\n                            status: response.status,\n                            statusText: response.statusText,\n                            error: errorData.message\n                        });\n                        \n                        throw new Error(errorData.message || `Erreur HTTP: ${response.status}`);\n                    }\n\n                    const result = await response.json();\n                    \n                    this.logSecurityEvent('API_REQUEST_SUCCESS', {\n                        endpoint: endpointPath,\n                        responseKeys: Object.keys(result)\n                    });\n                    \n                    return result;\n                    \n                } catch (error) {\n                    retryCount++;\n                    \n                    if (error.name === 'AbortError') {\n                        this.logSecurityEvent('API_REQUEST_TIMEOUT', { retryCount });\n                        if (retryCount > maxRetries) {\n                            throw new Error('Timeout de la requ√™te API');\n                        }\n                        continue;\n                    }\n                    \n                    if (retryCount > maxRetries) {\n                        this.logSecurityEvent('API_REQUEST_MAX_RETRIES', { \n                            retryCount, \n                            error: error.message \n                        });\n                        throw error;\n                    }\n                    \n                    // Attendre avant de r√©essayer\n                    await new Promise(resolve => setTimeout(resolve, 1000 * retryCount));\n                }\n            }\n        }\n\n        /**\n         * Sanitisation des donn√©es de requ√™te\n         */\n        sanitizeRequestData(data) {\n            const sanitized = {};\n            \n            // D'abord, copier tous les champs de data\n            for (const [key, value] of Object.entries(data)) {\n                if (typeof value === 'string') {\n                    sanitized[key] = this.sanitizeInput(value);\n                } else if (typeof value === 'object' && value !== null) {\n                    sanitized[key] = this.sanitizeRequestData(value);\n                } else {\n                    sanitized[key] = value;\n                }\n            }\n            \n            // Ensuite, ajouter/√©craser les credentials (API SunuID les attend ici)\n            // Utiliser les vraies valeurs (originales) si disponibles, sinon les valeurs directes\n            sanitized.client_id = this.config.originalClientId || this.config.clientId;\n            sanitized.secret_id = this.config.originalSecretId || this.config.secretId;\n            \n            // Debug: V√©rifier les credentials et les donn√©es\n            console.log('üîç Credentials dans sanitizeRequestData - clientId:', this.config.clientId);\n            console.log('üîç Credentials dans sanitizeRequestData - secretId:', this.config.secretId ? '***' + this.config.secretId.slice(-4) : 'null');\n            console.log('üîç Credentials dans sanitizeRequestData - sanitizedClientId:', sanitized.client_id);\n            console.log('üîç Credentials dans sanitizeRequestData - sanitizedSecretId:', sanitized.secret_id ? '***' + sanitized.secret_id.slice(-4) : 'null');\n            console.log('üîç Credentials dans sanitizeRequestData - data complet:', JSON.stringify(sanitized, null, 2));\n            \n            return sanitized;\n        }\n\n        /**\n         * G√©n√©rer un ID de requ√™te unique\n         */\n        generateRequestId() {\n            return 'req_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n        }\n\n        /**\n         * G√©n√©rer un code de session unique\n         */\n        generateSessionCode() {\n            const timestamp = Date.now();\n            const random = Math.random().toString(36).substr(2, 9);\n            const code = `${timestamp}_${random}`;\n            return btoa(code); // Encoder en base64\n        }\n\n        /**\n         * R√©cup√©rer les informations du partenaire depuis l'API\n         */\n        async fetchPartnerInfo() {\n            try {\n                const response = await this.makeRequest('/debug', {\n                    type: this.config.type,\n                    client_id: this.config.clientId,\n                    secret_id: this.config.secretId\n                });\n\n                console.log('üìã R√©ponse debug API:', response);\n\n                // V√©rifier la structure de la r√©ponse\n                if (response.success && response.data) {\n                    const data = response.data;\n                    \n                    // Essayer de r√©cup√©rer le partner_id depuis diff√©rentes structures possibles\n                    let partnerId = null;\n                    \n                    if (data.partner_id) {\n                        partnerId = data.partner_id;\n                    } else if (data.authentication && data.authentication.auth_test && data.authentication.auth_test.partner_id) {\n                        partnerId = data.authentication.auth_test.partner_id;\n                    } else if (data.auth_test && data.auth_test.partner_id) {\n                        partnerId = data.auth_test.partner_id;\n                    }\n                    \n                    if (partnerId) {\n                        this.config.partnerId = partnerId;\n                        \n                        // R√©cup√©rer le service_id depuis la r√©ponse\n                        if (data.service_id) {\n                            this.config.serviceId = data.service_id;\n                        } else {\n                            // Fallback: utiliser le partner_id comme service_id\n                            this.config.serviceId = partnerId;\n                        }\n                        \n                        // Utiliser le partner_id pour d√©terminer le nom du partenaire\n                        if (partnerId === 21) {\n                            this.config.partnerName = 'Fayma';\n                        } else {\n                            this.config.partnerName = `Partner_${partnerId}`;\n                        }\n                        \n                        console.log('‚úÖ Informations partenaire r√©cup√©r√©es:', {\n                            partnerName: this.config.partnerName,\n                            partnerId: this.config.partnerId,\n                            serviceId: this.config.serviceId\n                        });\n                    } else {\n                        console.warn('‚ö†Ô∏è Partner ID non trouv√© dans la r√©ponse, utilisation du partner_id par d√©faut');\n                        this.config.partnerName = `Partner_${this.config.partnerId || 'unknown'}`;\n                    }\n                } else {\n                    console.warn('‚ö†Ô∏è Structure de r√©ponse invalide, utilisation du partner_id par d√©faut');\n                    this.config.partnerName = `Partner_${this.config.partnerId || 'unknown'}`;\n                }\n            } catch (error) {\n                console.warn('‚ö†Ô∏è Erreur lors de la r√©cup√©ration des informations du partenaire:', error.message);\n                this.config.partnerName = 'Partner_unknown';\n            }\n        }\n\n        /**\n         * Appliquer le th√®me\n         */\n        applyTheme(theme) {\n            const container = document.querySelector('.sunuid-qr-code');\n            if (container) {\n                container.className = `sunuid-qr-code sunuid-theme-${theme}`;\n            }\n        }\n\n        /**\n         * G√©rer les erreurs\n         */\n        handleError(error) {\n            console.error('SunuID SDK Error:', error);\n            \n            if (this.config.onError) {\n                this.config.onError(error);\n            }\n        }\n\n        /**\n         * V√©rifier le statut des connexions\n         */\n        async checkConnections() {\n            const status = {\n                api: false,\n                websocket: false,\n                ready: false\n            };\n            \n            // V√©rifier l'API en utilisant l'endpoint debug avec les credentials\n            try {\n                const testResponse = await fetch(this.config.apiUrl + '/debug', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        type: this.config.type,\n                        client_id: this.config.clientId,\n                        secret_id: this.config.secretId\n                    })\n                });\n                \n                if (testResponse.ok) {\n                    const debugData = await testResponse.json();\n                    // L'API est accessible si on re√ßoit une r√©ponse avec success: true\n                    status.api = debugData.success === true;\n                    console.log('üîç API Status:', status.api ? 'accessible' : 'inaccessible');\n                } else {\n                    status.api = false;\n                    console.log('üîç API Status: HTTP', testResponse.status);\n                }\n            } catch (error) {\n                console.log('üîç Test API √©chou√©:', error.message);\n                status.api = false;\n            }\n            \n            // V√©rifier le WebSocket\n            status.websocket = this.socket && this.socket.connected;\n            \n            // Connexions pr√™tes si API est accessible\n            status.ready = status.api;\n            \n            return status;\n        }\n        \n        /**\n         * Attendre que les connexions soient pr√™tes\n         */\n        async waitForConnections(timeout = 5000) {\n            const startTime = Date.now();\n            \n            while (Date.now() - startTime < timeout) {\n                const status = await this.checkConnections();\n                \n                if (status.ready) {\n                    console.log('‚úÖ Connexions pr√™tes');\n                    return status;\n                }\n                \n                console.log('‚è≥ Attente connexions...', status);\n                await new Promise(resolve => setTimeout(resolve, 1000)); // V√©rification toutes les secondes\n            }\n            \n            throw new Error('Timeout connexions - Impossible de g√©n√©rer le QR code');\n        }\n        \n        /**\n         * Obtenir l'URL du QR code g√©n√©r√©\n         */\n        getQRCode() {\n            // Retourner l'URL du QR code si disponible\n            if (this.currentQRUrl) {\n                return this.currentQRUrl;\n            }\n            \n            // Sinon, retourner une URL par d√©faut ou null\n            return null;\n        }\n\n        /**\n         * Nettoyer les ressources\n         */\n        destroy() {\n            this.stopAutoRefresh();\n            \n            // Fermer la connexion WebSocket\n            if (this.socket) {\n                this.socket.disconnect();\n                this.socket = null;\n                console.log('üåê WebSocket d√©connect√©');\n            }\n            \n            this.isInitialized = false;\n            this.logSecurityEvent('SDK_DESTROY');\n            console.log('SunuID SDK d√©truit');\n        }\n\n        /**\n         * Arr√™ter le rafra√Æchissement automatique\n         */\n        stopAutoRefresh() {\n            if (this.refreshTimer) {\n                clearInterval(this.refreshTimer);\n                this.refreshTimer = null;\n                console.log('üîÑ Timer de rafra√Æchissement arr√™t√©');\n            }\n        }\n\n        /**\n         * Obtenir les logs de s√©curit√©\n         */\n        getSecurityLogs() {\n            return window.SunuIDSecurityLogs || [];\n        }\n\n        /**\n         * Nettoyer les logs de s√©curit√©\n         */\n        clearSecurityLogs() {\n            window.SunuIDSecurityLogs = [];\n            this.logSecurityEvent('SECURITY_LOGS_CLEARED');\n        }\n\n        /**\n         * Afficher un loader pendant le scan du QR code\n         */\n        showQRLoader() {\n            console.log('üîÑ Affichage du loader - Scan QR initi√©');\n            \n            // Chercher le conteneur QR dans diff√©rents IDs possibles\n            const containerIds = ['qr-area', 'qr-container', 'sunuid-qr-container'];\n            let container = null;\n            \n            for (const id of containerIds) {\n                container = document.getElementById(id);\n                if (container) break;\n            }\n            \n            if (!container) {\n                console.warn('‚ö†Ô∏è Conteneur QR non trouv√© pour afficher le loader');\n                return;\n            }\n            \n            // Remplacer le contenu par un loader anim√©\n            container.innerHTML = `\n                <div style=\"\n                    text-align: center;\n                    padding: 40px 20px;\n                    background: #f8f9fa;\n                    border: 2px solid #007bff;\n                    border-radius: 10px;\n                    color: #007bff;\n                    font-family: Arial, sans-serif;\n                \">\n                    <div style=\"\n                        width: 60px;\n                        height: 60px;\n                        border: 4px solid #e3f2fd;\n                        border-top: 4px solid #007bff;\n                        border-radius: 50%;\n                        animation: spin 1s linear infinite;\n                        margin: 0 auto 20px auto;\n                    \"></div>\n                    <h3 style=\"margin: 0 0 10px 0; color: #007bff;\">üîç Scan en cours...</h3>\n                    <p style=\"margin: 0; font-size: 14px;\">\n                        Veuillez patienter pendant la v√©rification de votre identit√©.\n                    </p>\n                    <div style=\"margin-top: 15px; font-size: 12px; color: #6c757d;\">\n                        ‚è±Ô∏è Traitement en cours...\n                    </div>\n                </div>\n                <style>\n                    @keyframes spin {\n                        0% { transform: rotate(0deg); }\n                        100% { transform: rotate(360deg); }\n                    }\n                </style>\n            `;\n            \n            console.log('‚úÖ Loader affich√© avec succ√®s');\n        }\n\n        /**\n         * Extraire les donn√©es d'authentification du format WebSocket\n         */\n        extractAuthDataFromWebSocket(websocketData) {\n            console.log('üîç Extraction des donn√©es d\\'authentification du WebSocket:', websocketData);\n            \n            // Si les donn√©es sont d√©j√† dans le bon format (callback), les retourner directement\n            if (websocketData.token && websocketData.session_id) {\n                console.log('‚úÖ Donn√©es d√©j√† au bon format (callback)');\n                return websocketData;\n            }\n            \n            // Si c'est un format WebSocket, extraire les donn√©es de responseData\n            if (websocketData.responseData) {\n                console.log('‚úÖ Format WebSocket d√©tect√©, extraction de responseData');\n                const authData = {\n                    token: websocketData.responseData.token || websocketData.responseData.auth_token,\n                    session_id: websocketData.responseData.session_id || websocketData.responseData.sessionId,\n                    user_id: websocketData.responseData.user_id || websocketData.responseData.userId,\n                    partner_id: websocketData.responseData.partner_id || websocketData.responseData.partnerId,\n                    type: websocketData.responseData.type,\n                    timestamp: websocketData.responseData.timestamp || websocketData.timestamp,\n                    signature: websocketData.responseData.signature,\n                    user_info: websocketData.responseData.user_info || websocketData.responseData.userInfo,\n                    redirect_url: websocketData.responseData.redirect_url || websocketData.responseData.redirectUrl\n                };\n                \n                console.log('üìã Donn√©es d\\'authentification extraites:', authData);\n                return authData;\n            }\n            \n            // Fallback : essayer d'extraire directement des champs principaux\n            console.log('‚ö†Ô∏è Format non reconnu, tentative d\\'extraction directe');\n            return {\n                token: websocketData.token || websocketData.auth_token,\n                session_id: websocketData.session_id || websocketData.sessionId,\n                user_id: websocketData.user_id || websocketData.userId,\n                partner_id: websocketData.partner_id || websocketData.partnerId,\n                type: websocketData.type,\n                timestamp: websocketData.timestamp,\n                signature: websocketData.signature,\n                user_info: websocketData.user_info || websocketData.userInfo,\n                redirect_url: websocketData.redirect_url || websocketData.redirectUrl\n            };\n        }\n\n        /**\n         * Afficher un message de succ√®s apr√®s authentification\n         */\n        showSuccessMessage(data) {\n            console.log('‚úÖ Affichage du message de succ√®s');\n            \n            // Chercher le conteneur QR dans diff√©rents IDs possibles\n            const containerIds = ['qr-area', 'qr-container', 'sunuid-qr-container'];\n            let container = null;\n            \n            for (const id of containerIds) {\n                container = document.getElementById(id);\n                if (container) break;\n            }\n            \n            if (!container) {\n                console.warn('‚ö†Ô∏è Conteneur QR non trouv√© pour afficher le message de succ√®s');\n                return;\n            }\n            \n            // Extraire les informations utilisateur\n            const userInfo = data.user_info || {};\n            const userName = userInfo.name || userInfo.username || 'Utilisateur';\n            const userEmail = userInfo.email || '';\n            \n            // Remplacer le contenu par un message de succ√®s\n            container.innerHTML = `\n                <div style=\"\n                    text-align: center;\n                    padding: 40px 20px;\n                    background: #d4edda;\n                    border: 2px solid #28a745;\n                    border-radius: 10px;\n                    color: #155724;\n                    font-family: Arial, sans-serif;\n                \">\n                    <div style=\"\n                        width: 60px;\n                        height: 60px;\n                        background: #28a745;\n                        border-radius: 50%;\n                        display: flex;\n                        align-items: center;\n                        justify-content: center;\n                        margin: 0 auto 20px auto;\n                        font-size: 30px;\n                        color: white;\n                    \">‚úÖ</div>\n                    <h3 style=\"margin: 0 0 10px 0; color: #155724;\">üéâ Authentification r√©ussie !</h3>\n                    <p style=\"margin: 0 0 15px 0; font-size: 16px; font-weight: bold;\">\n                        Bienvenue, ${userName} !\n                    </p>\n                    ${userEmail ? `<p style=\"margin: 0 0 15px 0; font-size: 14px; color: #6c757d;\">${userEmail}</p>` : ''}\n                    <p style=\"margin: 0; font-size: 14px;\">\n                        Votre identit√© a √©t√© v√©rifi√©e avec succ√®s.\n                    </p>\n                    <div style=\"margin-top: 20px; font-size: 12px; color: #6c757d;\">\n                        üîÑ Redirection en cours...\n                    </div>\n                </div>\n            `;\n            \n            console.log('‚úÖ Message de succ√®s affich√©');\n        }\n\n        /**\n         * G√©rer le callback SunuID\n         */\n        handleCallback() {\n            const urlParams = new URLSearchParams(window.location.search);\n            \n            // V√©rifier si c'est un callback SunuID\n            if (urlParams.has('token') && urlParams.has('session_id')) {\n                console.log('üîó Callback SunuID d√©tect√©');\n                \n                // R√©cup√©rer les param√®tres\n                const callbackData = {\n                    token: urlParams.get('token'),\n                    state: urlParams.get('state'),\n                    session_id: urlParams.get('session_id'),\n                    user_id: urlParams.get('user_id'),\n                    partner_id: urlParams.get('partner_id'),\n                    type: urlParams.get('type'),\n                    timestamp: urlParams.get('timestamp'),\n                    signature: urlParams.get('signature')\n                };\n                \n                console.log('üìã Donn√©es callback:', callbackData);\n                \n                // Valider le callback\n                this.validateCallback(callbackData);\n                \n                // Traiter l'authentification\n                this.processAuthentication(callbackData);\n                \n                return true;\n            }\n            \n            return false;\n        }\n\n        /**\n         * Valider le callback\n         */\n        validateCallback(data) {\n            console.log('üîí Validation du callback...');\n            \n            // V√©rifier l'√©tat de s√©curit√©\n            if (data.state && data.state !== this.config.state) {\n                console.error('‚ùå √âtat de s√©curit√© invalide');\n                throw new Error('√âtat de s√©curit√© invalide');\n            }\n            \n            // V√©rifier la signature (si configur√©e)\n            if (data.signature && this.config.verifySignature) {\n                if (!this.verifySignature(data)) {\n                    console.error('‚ùå Signature invalide');\n                    throw new Error('Signature invalide');\n                }\n            }\n            \n            // V√©rifier l'expiration\n            if (data.timestamp && this.isExpired(data.timestamp)) {\n                console.error('‚ùå Token expir√©');\n                throw new Error('Token expir√©');\n            }\n            \n            console.log('‚úÖ Callback valid√© avec succ√®s');\n        }\n\n        /**\n         * Traiter l'authentification\n         */\n        processAuthentication(data) {\n            console.log('üîê Traitement de l\\'authentification...');\n            \n            try {\n                // D√©coder le JWT token\n                const decodedToken = this.decodeJWT(data.token);\n                \n                // V√©rifier les donn√©es utilisateur\n                const userData = {\n                    user_id: decodedToken.user_id || data.user_id,\n                    session_id: decodedToken.session_id || data.session_id,\n                    partner_id: decodedToken.partner_id || data.partner_id,\n                    type: decodedToken.type || data.type,\n                    iat: decodedToken.iat,\n                    exp: decodedToken.exp\n                };\n                \n                console.log('üë§ Donn√©es utilisateur:', userData);\n                \n                // √âmettre l'√©v√©nement de succ√®s\n                this.emitWebSocketEvent('authentication_success', {\n                    userData: userData,\n                    callbackData: data,\n                    timestamp: Date.now()\n                });\n                \n                // Appeler le callback de succ√®s\n                if (this.config.onAuthenticationSuccess) {\n                    this.config.onAuthenticationSuccess(userData, data);\n                }\n                \n                // Rediriger si configur√©\n                if (this.config.redirectAfterSuccess) {\n                    this.redirectAfterSuccess(userData);\n                }\n                \n                console.log('‚úÖ Authentification trait√©e avec succ√®s');\n                \n            } catch (error) {\n                console.error('‚ùå Erreur lors du traitement:', error);\n                \n                // Appeler le callback d'erreur\n                if (this.config.onAuthenticationError) {\n                    this.config.onAuthenticationError(error, data);\n                }\n                \n                throw error;\n            }\n        }\n\n        /**\n         * D√©coder un JWT token\n         */\n        decodeJWT(token) {\n            try {\n                // D√©codage simple du JWT (sans v√©rification de signature)\n                const parts = token.split('.');\n                if (parts.length !== 3) {\n                    throw new Error('Format JWT invalide');\n                }\n                \n                const payload = parts[1];\n                const decoded = JSON.parse(atob(payload));\n                \n                return decoded;\n            } catch (error) {\n                console.error('‚ùå Erreur d√©codage JWT:', error);\n                throw new Error('Token JWT invalide');\n            }\n        }\n\n        /**\n         * V√©rifier la signature\n         */\n        verifySignature(data) {\n            // Impl√©mentation basique - √† adapter selon vos besoins\n            const expectedSignature = this.generateSignature(data);\n            return data.signature === expectedSignature;\n        }\n\n        /**\n         * G√©n√©rer une signature\n         */\n        generateSignature(data) {\n            // Impl√©mentation basique - √† adapter selon vos besoins\n            const payload = `${data.token}.${data.state}.${data.session_id}.${data.timestamp}`;\n            return btoa(payload).slice(0, 12); // Signature simplifi√©e\n        }\n\n        /**\n         * V√©rifier l'expiration\n         */\n        isExpired(timestamp) {\n            const currentTime = Math.floor(Date.now() / 1000);\n            const tokenTime = parseInt(timestamp);\n            const maxAge = this.config.tokenMaxAge || 300; // 5 minutes par d√©faut\n            \n            return (currentTime - tokenTime) > maxAge;\n        }\n\n        /**\n         * Rediriger apr√®s succ√®s\n         */\n        redirectAfterSuccess(userData) {\n            let redirectUrl = this.config.redirectAfterSuccess;\n            \n            // Remplacer les variables dans l'URL\n            redirectUrl = redirectUrl\n                .replace('{user_id}', userData.user_id)\n                .replace('{session_id}', userData.session_id)\n                .replace('{partner_id}', userData.partner_id)\n                .replace('{type}', userData.type);\n            \n            console.log('üîÑ Redirection vers:', redirectUrl);\n            \n            // Redirection avec d√©lai pour permettre les callbacks\n            setTimeout(() => {\n                window.location.href = redirectUrl;\n            }, 100);\n        }\n\n        /**\n         * G√©n√©rer un √©tat de s√©curit√©\n         */\n        generateState() {\n            const state = 'sunuid_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n            this.config.state = state;\n            return state;\n        }\n    }\n\n    // Exposer la classe globalement\n    window.SunuID = SunuID;\n    window.sunuidInstance = null;\n\n    // Fonction d'initialisation globale\n    window.initSunuID = function(config) {\n        try {\n            window.sunuidInstance = new SunuID(config);\n            return window.sunuidInstance;\n        } catch (error) {\n            console.error('Erreur lors de l\\'initialisation de SunuID:', error);\n            throw error;\n        }\n    };\n\n})(window); "],"names":["window","_window$SunuIDConfig","_window$SunuIDConfig2","_window$SunuIDConfig3","DEFAULT_CONFIG","apiUrl","SunuIDConfig","clientId","secretId","type","partnerName","theme","language","autoRefresh","refreshInterval","autoInit","onSuccess","onError","onStatusUpdate","onExpired","enableSecurityLogs","validateInputs","maxRetries","requestTimeout","secureInit","secureInitUrl","includes","replace","token","forceRemoteServer","useLocalFallback","redirectAfterSuccess","verifySignature","tokenMaxAge","onAuthenticationSuccess","onAuthenticationError","state","SunuID","config","arguments","length","undefined","_classCallCheck","this","_objectSpread","qrCode","refreshTimer","isInitialized","socket","initPromise","console","log","key","value","_init","_asyncToGenerator","_regenerator","m","_callee","w","_context","p","n","a","_initInProgress","_doInit","f","apply","_doInit2","_callee2","_t","_context2","handleCallback","validateSecurityParams","logSecurityEvent","fetchPartnerInfo","obfuscateCredentials","slice","initWebSocket","v","error","message","_secureInit","_callee3","initData","response","result","decodedToken","_t2","_context3","fetch","method","headers","Accept","body","JSON","stringify","ok","Error","concat","status","json","success","data","api_url","decodeSecureToken","client_id","secret_id","expiresIn","expires_in","maxRequests","max_requests","requestCount","parts","split","_parts","_slicedToArray","payload","decodedPayload","atob","tokenData","parse","exp","Date","now","_this","io","warn","setTimeout","ip","getClientIP","query","userId","username","transports","on","id","connected","reason","handleQRStatusUpdate","handleQRScanSuccess","handleQRExpired","showQRLoader","onAny","eventName","callback","_len","args","Array","_key","errors","push","isValidUrl","join","string","url","URL","protocol","_","event","securityLog","timestamp","toISOString","userAgent","navigator","location","href","SunuIDSecurityLogs","originalClientId","originalSecretId","clientIdDisplay","secretIdDisplay","input","trim","authData","extractAuthDataFromWebSocket","processAuthentication","showSuccessMessage","emit","_generateQR","_callee4","containerId","options","connectionStatus","socketId","qrContent","qrImageUrl","isLocal","_t3","_t4","_args4","_context4","waitForConnections","makeRequest","label","getTypeName","qrCodeUrl","startsWith","qr_url","qrUrl","image_url","imageUrl","currentQRUrl","sessionId","displayQRCode","startAutoRefresh","emitWebSocketEvent","stack","hostname","displayServiceUnavailable","_generateCustomQR","_callee5","_t5","_args5","_context5","qrcode","code","service_id","_x","_x2","_generateAuthQR","_callee6","_args6","_context6","generateQR","_x3","_generateKYCQR","_callee7","originalType","_args7","_context7","_x4","_generateSignatureQR","_callee8","_args8","_context8","_x5","_checkQRStatus","_callee9","_t6","_context9","serviceId","handleError","_x6","_generateQRWithContent","_callee0","content","localQRUrl","_t7","_args0","_context0","generateQRLocal","generateQRRemote","displayQRContent","_x7","_x8","_x9","_generateQRLocal","_callee1","_t8","_args1","_context1","encodeURIComponent","_x0","_x1","_x10","_generateQRRemote","_callee10","_t9","_args10","_context10","text","size","_x11","_x12","_x13","container","document","getElementById","typeName","innerHTML","qrElement","createElement","className","appendChild","applyTheme","_generateCustomQRCode","_callee11","qrContainer","_t0","_context11","generateQRPHP","displayDefaultQR","_x14","_x15","_generateQRClientSide","_callee12","canvas","ctx","_this2","_context12","ensureQRCodeLibrary","QRCode","width","height","getContext","fillStyle","fillRect","Promise","resolve","reject","toCanvas","margin","color","dark","light","font","textAlign","fillText","dataUrl","toDataURL","showQRInstructions","_x16","_x17","_x18","_generateQRPHP","_callee13","qrGeneratorUrl","requestBody","contentType","responseData","_context13","URLSearchParams","foreground_color","background_color","data_uri","_x19","_x20","_x21","_ensureQRCodeLibrary","_callee14","_context14","script","src","onload","onerror","head","instructionsElement","parentElement","querySelector","statusElement","style","display","classList","add","x","y","logo","Image","logoSize","logoX","logoY","drawImage","String","toUpperCase","_refreshQR","_callee15","_result","_t1","_args15","_context15","_x22","_this3","clearInterval","setInterval","_callee16","_t10","_context16","refreshQR","_makeRequest","_callee17","endpoint","_window$SunuIDConfig4","_window$SunuIDConfig5","sanitizedData","endpointPath","retryCount","_loop","_ret","_this4","_context18","sanitizeRequestData","endpoints","dataKeys","Object","keys","controller","timeoutId","errorText","errorData","_t11","_context17","AbortController","abort","signal","clearTimeout","e","statusText","responseKeys","name","d","_regeneratorValues","_x23","_x24","sanitized","_i","_Object$entries","entries","_Object$entries$_i","sanitizeInput","_typeof","Math","random","toString","substr","btoa","_fetchPartnerInfo","_callee18","partnerId","_t12","_context19","partner_id","authentication","auth_test","_checkConnections","_callee19","testResponse","debugData","_t13","_context20","api","websocket","ready","_waitForConnections","_callee20","timeout","startTime","_args21","_context21","checkConnections","stopAutoRefresh","disconnect","_i2","_containerIds","websocketData","session_id","auth_token","user_id","signature","user_info","userInfo","redirect_url","redirectUrl","_i3","_containerIds2","userName","userEmail","email","urlParams","search","has","callbackData","get","validateCallback","isExpired","decodeJWT","userData","iat","expectedSignature","generateSignature","floor","parseInt","sunuidInstance","initSunuID"],"mappings":"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"}