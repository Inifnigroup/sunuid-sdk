{"version":3,"file":"sunuid-sdk.js","sources":["../src/sunuid-sdk.js"],"sourcesContent":["/**\n * SunuID SDK - Package d'int√©gration pour partenaires\n * \n * @version 1.0.0\n * @author SunuID Team\n * @license MIT\n */\n\n(function(window) {\n    'use strict';\n\n    // Configuration par d√©faut\n    const DEFAULT_CONFIG = {\n        apiUrl: window.SunuIDConfig?.apiUrl || 'https://api.sunuid.fayma.sn',\n        clientId: null,\n        secretId: null,\n        type: 2, // Type par d√©faut (2 = authentification)\n        partnerName: null, // Nom du partenaire r√©cup√©r√© depuis l'API\n        theme: 'light',\n        language: 'fr',\n        autoRefresh: false, // D√©sactiv√© par d√©faut pour √©viter les appels r√©p√©titifs\n        refreshInterval: 30000, // 30 secondes\n        autoInit: false, // D√©sactiv√© par d√©faut pour √©viter les boucles\n        onSuccess: null,\n        onError: null,\n        onStatusUpdate: null,\n        onExpired: null,\n        // Nouvelles options de s√©curit√©\n        enableSecurityLogs: true,\n        validateInputs: true,\n        maxRetries: 3,\n        requestTimeout: 10000, // 10 secondes\n        // Options d'initialisation s√©curis√©e\n        secureInit: false,\n        secureInitUrl: (() => {\n            if (window.SunuIDConfig?.apiUrl?.includes('api.sunuid.fayma.sn')) {\n                return 'https://api.sunuid.fayma.sn/secure-init.php';\n            }\n            return window.SunuIDConfig?.apiUrl?.replace('/api', '') + '/secure-init.php' || 'https://api.sunuid.fayma.sn/secure-init.php';\n        })(),\n        token: null,\n        // Configuration pour forcer l'utilisation du serveur distant\n        forceRemoteServer: true,\n        useLocalFallback: false,\n        // Nouvelles options pour les callbacks\n        redirectAfterSuccess: null,\n        verifySignature: false,\n        tokenMaxAge: 300, // 5 minutes par d√©faut\n        onAuthenticationSuccess: null,\n        onAuthenticationError: null,\n        state: null\n    };\n\n    /**\n     * Classe principale SunuID\n     */\n    class SunuID {\n        constructor(config = {}) {\n            this.config = { ...DEFAULT_CONFIG, ...config };\n            this.qrCode = null;\n            this.refreshTimer = null;\n            this.isInitialized = false;\n            this.socket = null;\n            this.initPromise = null;\n            \n            // D√âSACTIV√â : Initialisation automatique pour √©viter les boucles\n            // L'utilisateur doit appeler init() manuellement\n            console.log('üîß SDK SunuID cr√©√© - Appelez init() manuellement');\n        }\n\n        /**\n         * Initialisation du SDK\n         */\n        async init() {\n            // Protection stricte contre les boucles\n            if (this.isInitialized) {\n                console.log('‚ö†Ô∏è SDK d√©j√† initialis√©, ignor√©');\n                return;\n            }\n            \n            // Protection contre les initialisations simultan√©es\n            if (this.initPromise) {\n                console.log('‚ö†Ô∏è Initialisation d√©j√† en cours, attente...');\n                return this.initPromise;\n            }\n            \n            // Protection contre les appels multiples rapides\n            if (this._initInProgress) {\n                console.log('‚ö†Ô∏è Initialisation en cours, ignor√©');\n                return;\n            }\n            \n            this._initInProgress = true;\n            this.initPromise = this._doInit();\n            \n            try {\n                await this.initPromise;\n            } finally {\n                this._initInProgress = false;\n            }\n            \n            return this.initPromise;\n        }\n\n        /**\n         * Initialisation interne du SDK\n         */\n        async _doInit() {\n            try {\n                // V√©rifier s'il y a un callback √† traiter en premier\n                if (this.handleCallback()) {\n                    console.log('‚úÖ Callback trait√©, initialisation termin√©e');\n                    return;\n                }\n\n                // Initialisation s√©curis√©e si activ√©e\n                if (this.config.secureInit) {\n                    await this.secureInit();\n                } else {\n                    // Validation s√©curis√©e des param√®tres\n                    if (this.config.validateInputs) {\n                        this.validateSecurityParams();\n                    }\n                }\n\n                // Log de s√©curit√© pour l'initialisation\n                this.logSecurityEvent('SDK_INIT_START', {\n                    apiUrl: this.config.apiUrl,\n                    type: this.config.type,\n                    secureInit: this.config.secureInit\n                });\n\n                // R√©cup√©rer les informations du partenaire depuis l'API\n                await this.fetchPartnerInfo();\n\n                // Obscurcir les credentials dans les logs\n                this.obfuscateCredentials();\n\n                this.isInitialized = true;\n                console.log('SunuID SDK initialis√© avec succ√®s');\n                console.log('üìã Configuration SDK:', {\n                    apiUrl: this.config.apiUrl,\n                    type: this.config.type,\n                    partnerName: this.config.partnerName,\n                    clientId: this.config.clientId ? '***' + this.config.clientId.slice(-4) : 'null',\n                    secretId: this.config.secretId ? '***' + this.config.secretId.slice(-4) : 'null',\n                    secureInit: this.config.secureInit,\n                    theme: this.config.theme\n                });\n                \n                this.logSecurityEvent('SDK_INIT_SUCCESS');\n                \n                // Initialiser la connexion WebSocket\n                this.initWebSocket();\n                \n            } catch (error) {\n                this.logSecurityEvent('SDK_INIT_ERROR', { error: error.message });\n                throw error;\n            }\n        }\n\n        /**\n         * Initialisation s√©curis√©e via PHP\n         */\n        async secureInit() {\n            try {\n                this.logSecurityEvent('SECURE_INIT_START');\n                \n                const initData = {\n                    type: this.config.type,\n                    partnerName: this.config.partnerName,\n                    theme: this.config.theme\n                };\n\n                const response = await fetch(this.config.secureInitUrl, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    body: JSON.stringify(initData)\n                });\n\n                if (!response.ok) {\n                    throw new Error(`Erreur HTTP: ${response.status}`);\n                }\n\n                const result = await response.json();\n                \n                console.log('üìã R√©ponse initialisation s√©curis√©e:', result);\n                \n                if (!result.success) {\n                    throw new Error(result.error || 'Erreur lors de l\\'initialisation s√©curis√©e');\n                }\n\n                // Stocker le token et les donn√©es s√©curis√©es\n                this.config.token = result.data.token;\n                this.config.apiUrl = result.data.api_url;\n                \n                // D√©coder le token pour r√©cup√©rer les credentials\n                const decodedToken = this.decodeSecureToken(result.data.token);\n                if (decodedToken) {\n                    this.config.clientId = decodedToken.client_id;\n                    this.config.secretId = decodedToken.secret_id;\n                } else {\n                    throw new Error('Impossible de d√©coder le token s√©curis√©');\n                }\n                \n                this.config.expiresIn = result.data.expires_in;\n                this.config.maxRequests = result.data.max_requests;\n                this.config.requestCount = 0;\n\n                this.logSecurityEvent('SECURE_INIT_SUCCESS', {\n                    expiresIn: result.data.expires_in,\n                    maxRequests: result.data.max_requests\n                });\n\n                console.log('‚úÖ Initialisation s√©curis√©e r√©ussie');\n                \n            } catch (error) {\n                this.logSecurityEvent('SECURE_INIT_ERROR', { error: error.message });\n                throw new Error(`√âchec de l'initialisation s√©curis√©e: ${error.message}`);\n            }\n        }\n\n        /**\n         * D√©coder le token s√©curis√©\n         */\n        decodeSecureToken(token) {\n            try {\n                const parts = token.split('.');\n                if (parts.length !== 2) {\n                    console.error('‚ùå Format de token invalide');\n                    return null;\n                }\n                \n                const [payload, signature] = parts;\n                \n                // D√©coder le payload (base64)\n                const decodedPayload = atob(payload);\n                const tokenData = JSON.parse(decodedPayload);\n                \n                // V√©rifier l'expiration\n                if (tokenData.exp && tokenData.exp < Date.now() / 1000) {\n                    console.error('‚ùå Token expir√©');\n                    return null;\n                }\n                \n                console.log('‚úÖ Token d√©cod√© avec succ√®s');\n                return tokenData;\n                \n            } catch (error) {\n                console.error('‚ùå Erreur d√©codage token:', error);\n                return null;\n            }\n        }\n\n        /**\n         * Initialiser la connexion WebSocket\n         */\n        initWebSocket() {\n            try {\n                // V√©rifier si Socket.IO est disponible\n                if (typeof io === 'undefined') {\n                    console.warn('‚ö†Ô∏è Socket.IO non disponible, WebSocket sera initialis√© plus tard');\n                    // R√©essayer apr√®s un d√©lai\n                    setTimeout(() => this.initWebSocket(), 1000);\n                    return;\n                }\n                \n                // Obtenir l'IP du client (simulation)\n                const ip = this.getClientIP();\n                \n                // Initialiser la connexion WebSocket si elle n'existe pas\n                if (!this.socket) {\n                    console.log('üåê Initialisation Socket.IO...');\n                    \n                    this.socket = io('wss://samasocket.fayma.sn:9443', {\n                        query: {\n                            token: this.config.clientId,\n                            type: 'web',\n                            userId: this.config.clientId,\n                            username: ip\n                        },\n                        transports: ['websocket', 'polling']\n                    });\n\n                    // Gestion des √©v√©nements WebSocket\n                    this.socket.on('connect', () => {\n                        console.log('üåê WebSocket connect√© avec succ√®s');\n                        console.log('üìä Socket ID:', this.socket.id);\n                        this.socket.connected = true;\n                    });\n\n                    this.socket.on('disconnect', (reason) => {\n                        console.log('‚ùå WebSocket d√©connect√©:', reason);\n                        this.socket.connected = false;\n                    });\n\n                    this.socket.on('connect_error', (error) => {\n                        console.error('‚ùå Erreur connexion WebSocket:', error);\n                        this.socket.connected = false;\n                    });\n\n                    // √âcouter les √©v√©nements sp√©cifiques\n                    this.socket.on('qr_status_update', (data) => {\n                        console.log('üì± Mise √† jour statut QR re√ßue:', data);\n                        this.handleQRStatusUpdate(data);\n                    });\n\n                    this.socket.on('qr_scan_success', (data) => {\n                        console.log('‚úÖ Scan QR r√©ussi re√ßu:', data);\n                        this.handleQRScanSuccess(data);\n                    });\n\n                    this.socket.on('qr_expired', (data) => {\n                        console.log('‚è∞ QR expir√© re√ßu:', data);\n                        this.handleQRExpired(data);\n                    });\n\n                    // √âcouter l'√©v√©nement qr_scan_initiated sp√©cifiquement\n                    this.socket.on('qr_scan_initiated', (data) => {\n                        console.log('üîç QR Scan Initiated re√ßu:', data);\n                        this.showQRLoader();\n                    });\n\n                    // √âcouter l'√©v√©nement message g√©n√©rique (fallback)\n                    this.socket.on('message', (data) => {\n                        console.log('üì® Message socket re√ßu:', data);\n                        if (data && data.type === 'qr_scan_initiated') {\n                            console.log('üîç QR Scan Initiated d√©tect√© dans message:', data);\n                            this.showQRLoader();\n                        }\n                    });\n\n                    // √âcouter tous les √©v√©nements socket pour le debugging\n                    this.socket.onAny = this.socket.onAny || function(eventName, callback) {\n                        // Fallback pour les versions de Socket.IO qui n'ont pas onAny\n                        console.log(`üåê Socket Event [${eventName}]:`, callback);\n                    };\n                    \n                    // Logger tous les √©v√©nements re√ßus\n                    this.socket.onAny((eventName, ...args) => {\n                        console.log(`üåê Socket Event [${eventName}]:`, args);\n                    });\n                } else {\n                    console.log('üåê WebSocket d√©j√† connect√©');\n                }\n            } catch (error) {\n                console.error('‚ùå Erreur initialisation WebSocket:', error);\n            }\n        }\n\n        /**\n         * Obtenir l'IP du client (simulation)\n         */\n        getClientIP() {\n            // Simulation - en production, vous pourriez utiliser un service d'IP\n            return '127.0.0.1';\n        }\n\n        /**\n         * Obtenir le nom du type √† partir du num√©ro\n         */\n        getTypeName(type) {\n            switch(type) {\n                case 1: return 'KYC';\n                case 2: return 'AUTH';\n                case 3: return 'SIGNATURE';\n                default: return `TYPE-${type}`;\n            }\n        }\n\n        /**\n         * Validation s√©curis√©e des param√®tres\n         */\n        validateSecurityParams() {\n            const errors = [];\n            \n            // Validation du clientId\n            if (!this.config.clientId || typeof this.config.clientId !== 'string') {\n                errors.push('clientId invalide ou manquant');\n            } else if (this.config.clientId.length < 10) {\n                errors.push('clientId trop court');\n            }\n            \n            // Validation du secretId\n            if (!this.config.secretId || typeof this.config.secretId !== 'string') {\n                errors.push('secretId invalide ou manquant');\n            } else if (this.config.secretId.length < 32) {\n                errors.push('secretId trop court (minimum 32 caract√®res)');\n            }\n            \n            // Validation de l'URL API\n            if (!this.config.apiUrl || !this.isValidUrl(this.config.apiUrl)) {\n                errors.push('apiUrl invalide');\n            }\n            \n            // Validation du type\n            if (![1, 2, 3].includes(this.config.type)) {\n                errors.push('type invalide (doit √™tre 1, 2 ou 3)');\n            }\n            \n            if (errors.length > 0) {\n                this.logSecurityEvent('VALIDATION_ERROR', { errors });\n                throw new Error(`Param√®tres de s√©curit√© invalides: ${errors.join(', ')}`);\n            }\n            \n            this.logSecurityEvent('VALIDATION_SUCCESS');\n        }\n\n        /**\n         * Validation d'URL s√©curis√©e\n         */\n        isValidUrl(string) {\n            try {\n                const url = new URL(string);\n                return url.protocol === 'https:' || url.protocol === 'http:';\n            } catch (_) {\n                return false;\n            }\n        }\n\n        /**\n         * Logs de s√©curit√©\n         */\n        logSecurityEvent(event, data = {}) {\n            if (!this.config.enableSecurityLogs) return;\n            \n            const securityLog = {\n                timestamp: new Date().toISOString(),\n                event: event,\n                data: data,\n                userAgent: navigator.userAgent,\n                url: window.location.href\n            };\n            \n            console.warn('üîí [SECURITY]', securityLog);\n            \n            // Stocker les logs de s√©curit√© (optionnel)\n            if (!window.SunuIDSecurityLogs) {\n                window.SunuIDSecurityLogs = [];\n            }\n            window.SunuIDSecurityLogs.push(securityLog);\n        }\n\n        /**\n         * Chiffrement simple des credentials (pour √©viter l'exposition en clair)\n         */\n        obfuscateCredentials() {\n            // Stocker les vraies valeurs pour les logs de s√©curit√©\n            this.config.originalClientId = this.config.clientId;\n            this.config.originalSecretId = this.config.secretId;\n            \n            // Cr√©er des versions obfusqu√©es pour l'affichage uniquement\n            if (this.config.clientId) {\n                this.config.clientIdDisplay = this.config.clientId.replace(/(.{3}).*(.{3})/, '$1***$2');\n            }\n            if (this.config.secretId) {\n                this.config.secretIdDisplay = this.config.secretId.replace(/(.{4}).*(.{4})/, '$1***$2');\n            }\n        }\n\n        /**\n         * Validation des entr√©es utilisateur\n         */\n        sanitizeInput(input) {\n            if (typeof input !== 'string') return input;\n            \n            // Protection contre les injections XSS basiques\n            return input\n                .replace(/[<>]/g, '') // Supprimer les balises HTML\n                .replace(/javascript:/gi, '') // Supprimer les protocoles dangereux\n                .trim();\n        }\n\n        /**\n         * G√©rer la mise √† jour du statut QR\n         */\n        handleQRStatusUpdate(data) {\n            console.log('üì± QR Status Update:', data);\n            if (this.config.onStatusUpdate) {\n                this.config.onStatusUpdate(data);\n            }\n        }\n\n        /**\n         * G√©rer le succ√®s du scan QR\n         */\n        handleQRScanSuccess(data) {\n            console.log('‚úÖ QR Scan Success re√ßu:', data);\n            \n            try {\n                // Extraire les donn√©es d'authentification du format WebSocket\n                const authData = this.extractAuthDataFromWebSocket(data);\n                \n                // Traiter l'authentification comme un callback\n                this.processAuthentication(authData);\n                \n                // Afficher un message de succ√®s\n                this.showSuccessMessage(authData);\n                \n                // Appeler le callback de succ√®s (pour compatibilit√©)\n                if (this.config.onSuccess) {\n                    this.config.onSuccess(authData);\n                }\n                \n                console.log('‚úÖ Authentification WebSocket trait√©e avec succ√®s');\n                \n            } catch (error) {\n                console.error('‚ùå Erreur lors du traitement WebSocket:', error);\n                \n                // Appeler le callback d'erreur\n                if (this.config.onAuthenticationError) {\n                    this.config.onAuthenticationError(error, data);\n                }\n            }\n        }\n\n        /**\n         * G√©rer l'expiration du QR\n         */\n        handleQRExpired(data) {\n            console.log('‚è∞ QR Expired:', data);\n            if (this.config.onExpired) {\n                this.config.onExpired(data);\n            }\n        }\n\n        /**\n         * √âmettre un √©v√©nement WebSocket\n         */\n        emitWebSocketEvent(event, data) {\n            if (this.socket && this.socket.connected) {\n                this.socket.emit(event, data);\n                console.log(`üì§ √âv√©nement WebSocket √©mis: ${event}`, data);\n            } else {\n                console.warn('‚ö†Ô∏è WebSocket non connect√©, impossible d\\'√©mettre l\\'√©v√©nement:', event);\n            }\n        }\n\n        /**\n         * Obtenir le statut de la connexion WebSocket\n         */\n        getWebSocketStatus() {\n            if (!this.socket) {\n                return 'not_initialized';\n            }\n            return this.socket.connected ? 'connected' : 'disconnected';\n        }\n\n        /**\n         * Forcer l'initialisation WebSocket (si Socket.IO devient disponible plus tard)\n         */\n        forceWebSocketInit() {\n            if (typeof io !== 'undefined' && !this.socket) {\n                console.log('üîÑ For√ßage de l\\'initialisation WebSocket...');\n                this.initWebSocket();\n            }\n        }\n\n        /**\n         * G√©n√©rer un QR code avec le type configur√©\n         */\n        async generateQR(containerId = 'sunuid-qr-container', options = {}) {\n            // Attendre l'initialisation si n√©cessaire\n            if (this.initPromise) {\n                await this.initPromise;\n                this.initPromise = null;\n            }\n            \n            if (!this.isInitialized) {\n                throw new Error('SunuID: SDK non initialis√©');\n            }\n            \n            console.log('üéØ generateQR appel√© avec containerId:', containerId);\n            \n            // Attendre que les connexions soient pr√™tes\n            console.log('üîç Attente connexions API et WebSocket...');\n            try {\n                const connectionStatus = await this.waitForConnections(5000); // 5 secondes max\n                console.log('‚úÖ Connexions pr√™tes:', connectionStatus);\n            } catch (connectionError) {\n                console.error('‚ùå Erreur connexions:', connectionError.message);\n                throw new Error('Connexions non disponibles - Impossible de g√©n√©rer le QR code');\n            }\n\n            try {\n                // Utiliser uniquement le socketID comme contenu du QR\n                const socketId = this.socket ? this.socket.id : 'timeout-socket-id';\n                const qrContent = socketId;\n                \n                console.log('üìÑ Contenu QR pr√©par√©:', qrContent);\n                console.log('üîå Socket ID:', socketId);\n                \n                                    // G√©n√©rer le QR avec le contenu complet\n                    const partnerName = this.config.partnerName || 'Partner_unknown';\n                    const response = await this.makeRequest('/qr-generate', {\n                        type: this.config.type,\n                        data: qrContent, // Essayer data au lieu de content\n                        label: `${this.getTypeName(this.config.type)} ${partnerName}`, // Label du QR avec nom du partenaire\n                        ...options\n                    });\n\n                if (response.success) {\n                    // Debug: Afficher la structure compl√®te de la r√©ponse\n                    console.log('üìã R√©ponse QR API compl√®te:', response);\n                    console.log('üìã Structure response.data:', response.data);\n                    \n                    // Construire l'URL compl√®te du QR code\n                    let qrImageUrl = response.data.qrCodeUrl;\n                    \n                    // Si l'URL est relative, la rendre absolue\n                    if (qrImageUrl && qrImageUrl.startsWith('/')) {\n                        qrImageUrl = `${this.config.apiUrl}${qrImageUrl}`;\n                    }\n                    \n                    // V√©rifier si l'URL du QR code existe\n                    if (!qrImageUrl) {\n                        console.warn('‚ö†Ô∏è qrCodeUrl non trouv√© dans la r√©ponse, recherche d\\'alternatives...');\n                        \n                        // Essayer d'autres champs possibles\n                        qrImageUrl = response.data.qr_url || \n                                    response.data.qrUrl || \n                                    response.data.url || \n                                    response.data.image_url ||\n                                    response.data.imageUrl;\n                        \n                        if (qrImageUrl) {\n                            console.log('‚úÖ URL QR trouv√©e dans un champ alternatif:', qrImageUrl);\n                        } else {\n                            console.error('‚ùå Aucune URL QR trouv√©e dans la r√©ponse');\n                            throw new Error('URL du QR code non trouv√©e dans la r√©ponse API');\n                        }\n                    }\n                    \n                    this.currentQRUrl = qrImageUrl;\n                    \n                    console.log('‚úÖ QR code g√©n√©r√© par API principale:', qrImageUrl);\n                    console.log('üìÑ Contenu QR final:', qrContent);\n                    console.log('üè∑Ô∏è Label QR:', response.data.label || 'N/A');\n                    console.log('üÜî Session ID:', response.data.sessionId || 'N/A');\n                    \n                    // Afficher le QR code\n                    this.displayQRCode(containerId, qrImageUrl, this.config.type, options);\n                    \n                    this.startAutoRefresh(containerId, this.config.type, options);\n                    \n                    // √âmettre un √©v√©nement WebSocket pour la g√©n√©ration du QR\n                    this.emitWebSocketEvent('qr_generated', {\n                        type: this.config.type,\n                        qrCodeUrl: qrImageUrl,\n                        socketId: socketId,\n                        qrContent: qrContent,\n                        label: response.data.label,\n                        sessionId: response.data.sessionId,\n                        timestamp: Date.now()\n                    });\n                    \n                    return {\n                        ...response.data,\n                        qrCodeUrl: qrImageUrl,\n                        qrContent: qrContent,\n                        label: response.data.label,\n                        sessionId: response.data.sessionId\n                    };\n                } else {\n                    throw new Error(response.message || 'Erreur lors de la g√©n√©ration du QR code');\n                }\n            } catch (error) {\n                console.error('Erreur API d√©tect√©e:', error.message);\n                console.error('Stack trace complet:', error.stack);\n                console.error('Configuration SDK:', {\n                    apiUrl: this.config.apiUrl,\n                    type: this.config.type,\n                    secureInit: this.config.secureInit,\n                    clientId: this.config.clientId ? '***' + this.config.clientId.slice(-4) : 'null',\n                    secretId: this.config.secretId ? '***' + this.config.secretId.slice(-4) : 'null'\n                });\n                \n                // Fallback vers le service local seulement si activ√©\n                if (this.config.useLocalFallback) {\n                    console.log('üîç V√©rification fallback local...');\n                    console.log('üîç Hostname:', window.location.hostname);\n                    console.log('üîç Protocol:', window.location.protocol);\n                    console.log('üîç URL compl√®te:', window.location.href);\n                    \n                    const isLocal = window.location.hostname === 'localhost' || \n                                   window.location.hostname === '127.0.0.1' || \n                                   window.location.protocol === 'file:';\n                    \n                    console.log('üîç Est local:', isLocal);\n                    \n                    if (isLocal) {\n                        console.log('üîÑ Tentative fallback vers service QR local...');\n                        console.log('‚ùå Fallback local non impl√©ment√© - utilisation serveur distant uniquement');\n                    } else {\n                        console.log('‚ùå Pas en local, pas de fallback');\n                    }\n                } else {\n                    console.log('üîí Fallback local d√©sactiv√©, utilisation serveur distant uniquement');\n                }\n                \n                console.log('Affichage du message \"Service non disponible\" pour type ' + this.config.type);\n                this.displayServiceUnavailable(containerId, this.config.type);\n                throw new Error('Service non disponible');\n            }\n        }\n\n\n\n        /**\n         * G√©n√©rer un QR code avec un type personnalis√©\n         */\n        async generateCustomQR(containerId, type, options = {}) {\n            // Attendre l'initialisation si n√©cessaire\n            if (this.initPromise) {\n                await this.initPromise;\n                this.initPromise = null;\n            }\n            \n            if (!this.isInitialized) {\n                throw new Error('SunuID: SDK non initialis√©');\n            }\n\n            try {\n                const response = await this.makeRequest('/qr-generate', {\n                    type: type, // Type personnalis√© (1, 2, 3, etc.)\n                    ...options\n                });\n\n                if (response.success) {\n                    // Construire l'URL compl√®te de l'image QR avec la base URL pour les images\n                    const imageBaseUrl = 'https://sunuid.fayma.sn';\n                    const qrImageUrl = `${imageBaseUrl}${response.data.qrcode}`;\n                    this.displayQRCode(containerId, qrImageUrl, type, options);\n                    \n                    // Le QR code est d√©j√† g√©n√©r√© par l'API principale\n                    console.log('‚úÖ QR code personnalis√© g√©n√©r√© par API principale:', qrImageUrl);\n                    console.log('üìÑ Code de session:', response.data.code);\n                    console.log('üÜî Service ID:', response.data.service_id);\n                    \n                    this.startAutoRefresh(containerId, type, options);\n                    return {\n                        ...response.data,\n                        qrCodeUrl: qrImageUrl,\n                        sessionId: response.data.service_id\n                    };\n                } else {\n                    throw new Error(response.message || 'Erreur lors de la g√©n√©ration du QR code');\n                }\n            } catch (error) {\n                console.error('Erreur API d√©tect√©e:', error.message);\n                console.error('Stack trace complet:', error.stack);\n                console.error('Configuration SDK (Custom):', {\n                    apiUrl: this.config.apiUrl,\n                    type: type,\n                    secureInit: this.config.secureInit,\n                    clientId: this.config.clientId ? '***' + this.config.clientId.slice(-4) : 'null',\n                    secretId: this.config.secretId ? '***' + this.config.secretId.slice(-4) : 'null'\n                });\n                console.log('Affichage du message \"Service non disponible\" pour type ' + type);\n                this.displayServiceUnavailable(containerId, type);\n                throw new Error('Service non disponible');\n            }\n        }\n\n        // Alias pour maintenir la compatibilit√©\n        async generateAuthQR(containerId, options = {}) {\n            return this.generateQR(containerId, options);\n        }\n\n        async generateKYCQR(containerId, options = {}) {\n            // Sauvegarder le type actuel\n            const originalType = this.config.type;\n            // Changer temporairement le type pour KYC\n            this.config.type = 1;\n            try {\n                return await this.generateQR(containerId, options);\n            } finally {\n                // Restaurer le type original\n                this.config.type = originalType;\n            }\n        }\n\n        async generateSignatureQR(containerId, options = {}) {\n            // Sauvegarder le type actuel\n            const originalType = this.config.type;\n            // Changer temporairement le type pour Signature\n            this.config.type = 3;\n            try {\n                return await this.generateQR(containerId, options);\n            } finally {\n                // Restaurer le type original\n                this.config.type = originalType;\n            }\n        }\n\n        /**\n         * V√©rifier le statut d'un QR code\n         */\n        async checkQRStatus(sessionId) {\n            if (!this.isInitialized) {\n                throw new Error('SunuID: SDK non initialis√©');\n            }\n\n            try {\n                const response = await this.makeRequest('/qr-status', {\n                    serviceId: sessionId\n                });\n\n                if (response.success) {\n                    return response.data;\n                } else {\n                    throw new Error(response.message || 'Erreur lors de la v√©rification du statut');\n                }\n            } catch (error) {\n                this.handleError(error);\n                throw error;\n            }\n        }\n\n        /**\n         * G√©n√©rer un QR code avec un contenu sp√©cifique\n         */\n        async generateQRWithContent(content, containerId, type, options = {}) {\n            console.log('üé® G√©n√©ration QR avec contenu:', content);\n            \n            try {\n                // Essayer d'abord le service QR local\n                if (window.location.hostname === 'localhost' || \n                    window.location.hostname === '127.0.0.1' || \n                    window.location.protocol === 'file:') {\n                    \n                    console.log('üè† Utilisation service QR local...');\n                    const localQRUrl = await this.generateQRLocal(content, containerId, type, options);\n                    if (localQRUrl) {\n                        return localQRUrl;\n                    }\n                }\n                \n                // Fallback vers le service QR distant\n                console.log('üåê Utilisation service QR distant...');\n                return await this.generateQRRemote(content, containerId, type, options);\n                \n            } catch (error) {\n                console.error('‚ùå Erreur g√©n√©ration QR:', error);\n                // Fallback vers affichage simple du contenu\n                this.displayQRContent(containerId, content, type, options);\n                return null;\n            }\n        }\n        \n        /**\n         * G√©n√©rer QR code avec service local\n         */\n        async generateQRLocal(content, containerId, type, options = {}) {\n            try {\n                const response = await fetch('http://localhost:8000/api/generate/text', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/x-www-form-urlencoded'\n                    },\n                    body: `text=${encodeURIComponent(content)}&size=300`\n                });\n                \n                if (response.ok) {\n                    const data = await response.json();\n                    const qrUrl = `data:image/png;base64,${data.qrcode}`;\n                    this.displayQRCode(containerId, qrUrl, type, options);\n                    return qrUrl;\n                }\n            } catch (error) {\n                console.log('‚ùå Service QR local non disponible:', error.message);\n            }\n            return null;\n        }\n        \n        /**\n         * G√©n√©rer QR code avec service distant\n         */\n        async generateQRRemote(content, containerId, type, options = {}) {\n            try {\n                const response = await fetch('https://api.sunuid.fayma.sn/qr-generate', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        text: content,\n                        size: 300,\n                        type: type\n                    })\n                });\n                \n                if (response.ok) {\n                    const data = await response.json();\n                    const qrUrl = `data:image/png;base64,${data.qrcode}`;\n                    this.displayQRCode(containerId, qrUrl, type, options);\n                    return qrUrl;\n                }\n            } catch (error) {\n                console.error('‚ùå Erreur service QR distant:', error);\n            }\n            \n            // Fallback vers affichage du contenu\n            this.displayQRContent(containerId, content, type, options);\n            return null;\n        }\n        \n        /**\n         * Afficher le contenu QR en texte (fallback)\n         */\n        displayQRContent(containerId, content, type, options = {}) {\n            const container = document.getElementById(containerId);\n            if (!container) {\n                throw new Error(`Conteneur avec l'ID \"${containerId}\" non trouv√©`);\n            }\n\n            const typeName = this.getTypeName(type);\n            container.innerHTML = `\n                <div class=\"sunuid-qr-code\">\n                    <div class=\"sunuid-qr-header\">\n                        <h3>${typeName}</h3>\n                    </div>\n                    <div class=\"sunuid-qr-content\" style=\"text-align: center; padding: 20px; background: #f8f9fa; border: 1px solid #dee2e6; border-radius: 5px; margin: 10px 0;\">\n                        <p><strong>Contenu QR Code:</strong></p>\n                        <p style=\"font-family: monospace; font-size: 14px; word-break: break-all;\">${content}</p>\n                    </div>\n                    <div class=\"sunuid-qr-instructions\">\n                        <p>Contenu QR g√©n√©r√© avec le format: {type}-{code}-{socketid}</p>\n                    </div>\n                </div>\n            `;\n            \n            console.log('‚úÖ Contenu QR affich√©:', content);\n        }\n        \n        /**\n         * Afficher un QR code dans un conteneur\n         */\n        displayQRCode(containerId, qrUrl, type, options = {}) {\n            const container = document.getElementById(containerId);\n            if (!container) {\n                throw new Error(`Conteneur avec l'ID \"${containerId}\" non trouv√©`);\n            }\n\n            // Nettoyer le conteneur\n            container.innerHTML = '';\n\n            // Cr√©er l'√©l√©ment QR code\n            const qrElement = document.createElement('div');\n            qrElement.className = 'sunuid-qr-code';\n            \n            // Afficher l'image QR avec les informations\n            const typeName = this.getTypeName(type);\n            qrElement.innerHTML = `\n                <div class=\"sunuid-qr-header\">\n                    <h3>${type === 1 ? 'V√©rification KYC' : type === 2 ? 'Authentification' : type === 3 ? 'Signature' : 'Service Type ' + type}</h3>\n                </div>\n                <div class=\"sunuid-qr-image\">\n                    <img src=\"${qrUrl}\" alt=\"QR Code ${typeName}\" style=\"max-width: 300px; border: 1px solid #ddd; border-radius: 5px;\" />\n                </div>\n               \n            `;\n\n            container.appendChild(qrElement);\n\n            // Appliquer le th√®me\n            this.applyTheme(options.theme || this.config.theme);\n            \n            console.log('‚úÖ QR code affich√©:', qrUrl);\n        }\n\n        /**\n         * G√©n√©rer un QR code personnalis√© avec PHP Endroid\n         */\n        async generateCustomQRCode(content, label, options = {}) {\n            console.log('üé® D√©but g√©n√©ration QR personnalis√©...');\n            console.log('üìÑ Contenu:', content);\n            console.log('üè∑Ô∏è Label:', label);\n            \n            // Chercher le conteneur QR\n            let qrContainer = document.getElementById('sunuid-qr-container');\n            if (!qrContainer) {\n                qrContainer = document.getElementById('qr-container');\n            }\n            if (!qrContainer) {\n                console.error('‚ùå QR container not found');\n                return;\n            }\n            \n            console.log('‚úÖ QR container trouv√©');\n\n            // Nettoyer le conteneur\n            qrContainer.innerHTML = '<div style=\"text-align: center; padding: 20px;\"><p>G√©n√©ration QR code...</p></div>';\n\n                         try {\n                 // Utiliser directement l'API principale (plus fiable)\n                 console.log('üé® Tentative g√©n√©ration via API principale...');\n                 await this.generateQRPHP(content, label, qrContainer);\n                 console.log('‚úÖ QR code g√©n√©r√© avec succ√®s');\n                 \n             } catch (error) {\n                 console.error('‚ùå Erreur g√©n√©ration API:', error);\n                 \n                 // Fallback final : image par d√©faut\n                 console.log('‚ö†Ô∏è Affichage image par d√©faut');\n                 this.displayDefaultQR(qrContainer, content, label);\n             }\n        }\n\n        /**\n         * G√©n√©rer un QR code c√¥t√© client (m√©thode principale)\n         */\n        async generateQRClientSide(content, label, qrContainer) {\n            // Charger QRCode si n√©cessaire\n            await this.ensureQRCodeLibrary();\n            \n            if (typeof QRCode === 'undefined') {\n                throw new Error('QRCode library non disponible');\n            }\n            \n            // Cr√©er un canvas\n            const canvas = document.createElement('canvas');\n            canvas.width = 300;\n            canvas.height = 320;\n            const ctx = canvas.getContext('2d');\n            \n            // Fond blanc\n            ctx.fillStyle = '#FFFFFF';\n            ctx.fillRect(0, 0, 300, 320);\n            \n            // G√©n√©rer le QR code\n            return new Promise((resolve, reject) => {\n                QRCode.toCanvas(canvas, content, {\n                    width: 280,\n                    margin: 10,\n                    color: {\n                        dark: '#000000',\n                        light: '#FFFFFF'\n                    }\n                }, (error) => {\n                    if (error) {\n                        reject(error);\n                        return;\n                    }\n                    \n                    // Ajouter le label\n                    ctx.fillStyle = '#333333';\n                    ctx.font = 'bold 14px Arial';\n                    ctx.textAlign = 'center';\n                    ctx.fillText(label, 150, 305);\n                    \n                    // Convertir en data URL\n                    const dataUrl = canvas.toDataURL('image/png');\n                    \n                    // Stocker l'URL\n                    this.currentQRUrl = dataUrl;\n                    \n                    // Afficher le QR code\n                    qrContainer.innerHTML = `\n                        <div style=\"text-align: center; padding: 20px;\">\n                            <img src=\"${dataUrl}\" alt=\"QR Code\" style=\"max-width: 300px; border: 2px solid #ddd; border-radius: 10px;\">\n                        </div>\n                    `;\n                    \n                    // Afficher les instructions\n                    this.showQRInstructions(qrContainer);\n                    \n                    resolve();\n                });\n            });\n        }\n\n        /**\n         * G√©n√©rer un QR code via endpoint PHP (fallback)\n         */\n        async generateQRPHP(content, label, qrContainer) {\n                         // Construire l'URL - Utiliser l'API principale qui fonctionne\n             let qrGeneratorUrl;\n             if (this.config.forceRemoteServer) {\n                 qrGeneratorUrl = 'https://api.sunuid.fayma.sn/qr-generate';\n             } else if (this.config.apiUrl.includes('api.sunuid.fayma.sn')) {\n                 qrGeneratorUrl = 'https://api.sunuid.fayma.sn/qr-generate';\n             } else if (this.config.apiUrl.includes('localhost') || this.config.apiUrl.includes('127.0.0.1')) {\n                 qrGeneratorUrl = 'http://localhost:8000/api/generate/text';\n             } else {\n                 qrGeneratorUrl = this.config.apiUrl + '/qr-generate';\n             }\n            \n            console.log('üîó URL QR Generator:', qrGeneratorUrl);\n            \n                         // Adapter le format selon l'URL\n             let requestBody;\n             let contentType;\n             \n             if (qrGeneratorUrl.includes('localhost:8000')) {\n                 // Service local - format form-data\n                 contentType = 'application/x-www-form-urlencoded';\n                 requestBody = new URLSearchParams({\n                     text: content,\n                     size: 300,\n                     margin: 10,\n                     foreground_color: '000000',\n                     background_color: 'FFFFFF'\n                 });\n             } else {\n                 // Service distant - format JSON avec les param√®tres de l'API principale\n                 contentType = 'application/json';\n                 requestBody = JSON.stringify({\n                     type: this.config.type,\n                     client_id: this.config.clientId,\n                     secret_id: this.config.secretId,\n                     content: content,\n                     label: label\n                 });\n             }\n             \n             const response = await fetch(qrGeneratorUrl, {\n                 method: 'POST',\n                 headers: {\n                     'Content-Type': contentType,\n                     'Accept': 'application/json'\n                 },\n                 body: requestBody\n             });\n            \n            if (!response.ok) {\n                throw new Error(`Erreur HTTP: ${response.status}`);\n            }\n            \n            const responseData = await response.json();\n            \n                         if (!responseData.success) {\n                 throw new Error(`Erreur QR: ${responseData.error}`);\n             }\n             \n             // Adapter selon le format de r√©ponse\n             let qrImageUrl;\n             if (qrGeneratorUrl.includes('localhost:8000')) {\n                 // Service local\n                 qrImageUrl = responseData.data_uri;\n             } else {\n                 // Service distant - utiliser le format de l'API principale\n                 const imageBaseUrl = 'https://sunuid.fayma.sn';\n                 qrImageUrl = `${imageBaseUrl}${responseData.data.qrcode}`;\n             }\n             \n             // Stocker l'URL\n             this.currentQRUrl = qrImageUrl;\n             \n             // Afficher le QR code\n             qrContainer.innerHTML = `\n                 <div style=\"text-align: center; padding: 20px;\">\n                     <img src=\"${qrImageUrl}\" alt=\"QR Code\" style=\"max-width: 300px; border: 2px solid #ddd; border-radius: 10px;\">\n                 </div>\n             `;\n            \n            // Afficher les instructions\n            this.showQRInstructions(qrContainer);\n        }\n\n        /**\n         * Afficher une image QR par d√©faut (fallback final)\n         */\n        displayDefaultQR(qrContainer, content, label) {\n            qrContainer.innerHTML = `\n                <div style=\"text-align: center; padding: 20px; color: #666;\">\n                    <div style=\"width: 300px; height: 300px; background: #f0f0f0; border: 2px solid #ddd; border-radius: 10px; display: flex; align-items: center; justify-content: center; margin: 0 auto;\">\n                        <div>\n                            <p style=\"font-size: 24px; margin: 0;\">üì±</p>\n                            <p style=\"font-size: 14px; margin: 10px 0 0 0;\">QR Code</p>\n                        </div>\n                    </div>\n                    <p style=\"margin-top: 10px; font-size: 12px;\">${label}</p>\n                    <p style=\"font-size: 10px; color: #999; margin-top: 5px;\">Contenu: ${content}</p>\n                </div>\n            `;\n        }\n\n        /**\n         * S'assurer que la biblioth√®que QRCode est disponible\n         */\n        async ensureQRCodeLibrary() {\n            if (typeof QRCode !== 'undefined') {\n                console.log('‚úÖ QRCode library d√©j√† disponible');\n                return true;\n            }\n            \n            console.log('üì¶ Chargement QRCode library...');\n            \n            return new Promise((resolve, reject) => {\n                const script = document.createElement('script');\n                script.src = 'https://cdn.jsdelivr.net/npm/qrcode@1.5.3/lib/browser.min.js';\n                script.onload = () => {\n                    setTimeout(() => {\n                        if (typeof QRCode !== 'undefined') {\n                            console.log('‚úÖ QRCode library charg√©e');\n                            resolve(true);\n                        } else {\n                            console.error('‚ùå QRCode non disponible apr√®s chargement');\n                            reject(new Error('QRCode library non disponible apr√®s chargement'));\n                        }\n                    }, 200);\n                };\n                script.onerror = () => {\n                    console.error('‚ùå Erreur chargement QRCode library');\n                    reject(new Error('Erreur chargement QRCode library'));\n                };\n                document.head.appendChild(script);\n            });\n        }\n\n        /**\n         * Afficher les instructions pour le QR code\n         */\n        showQRInstructions(qrContainer) {\n            const instructionsElement = qrContainer.parentElement.querySelector('.sunuid-qr-instructions');\n            const statusElement = qrContainer.parentElement.querySelector('.sunuid-qr-status');\n            \n            if (instructionsElement) {\n                instructionsElement.style.display = 'block';\n                instructionsElement.classList.add('sunuid-qr-ready');\n            }\n            if (statusElement) {\n                statusElement.style.display = 'block';\n                statusElement.classList.add('sunuid-qr-ready');\n            }\n        }\n\n        /**\n         * Ajouter le logo au centre du QR code\n         */\n        addLogoToCenter(ctx, x, y, width, height) {\n            try {\n                // Cr√©er une image pour le logo\n                const logo = new Image();\n                logo.onload = () => {\n                    const logoSize = 40;\n                    const logoX = x + (width - logoSize) / 2;\n                    const logoY = y + (width - logoSize) / 2;\n\n                    // Dessiner un fond blanc pour le logo\n                    ctx.fillStyle = 'white';\n                    ctx.fillRect(logoX - 2, logoY - 2, logoSize + 4, logoSize + 4);\n\n                    // Dessiner le logo\n                    ctx.drawImage(logo, logoX, logoY, logoSize, logoSize);\n                };\n                logo.src = 'src/logoqr.png';\n            } catch (error) {\n                console.warn('Logo non disponible:', error);\n            }\n        }\n\n        /**\n         * Afficher l'image de fallback\n         */\n        displayFallbackImage() {\n            console.log('‚ö†Ô∏è Affichage de l\\'image de fallback');\n            const qrContainer = document.getElementById('sunuid-qr-container');\n            if (qrContainer) {\n                qrContainer.innerHTML = `\n                    <div style=\"text-align: center; padding: 20px; color: #666;\">\n                        <p>‚ö†Ô∏è G√©n√©ration QR personnalis√© non disponible</p>\n                        <p>Utilisation de l'image par d√©faut</p>\n                        <p><strong>Debug:</strong> QRCode disponible: ${typeof QRCode !== 'undefined'}</p>\n                        <p><strong>Debug:</strong> Container trouv√©: ${qrContainer !== null}</p>\n                    </div>\n                `;\n            }\n        }\n\n        /**\n         * Afficher \"Service non disponible\"\n         */\n        displayServiceUnavailable(containerId, type) {\n            console.log(`displayServiceUnavailable appel√©e pour ${containerId}, type: ${type}`);\n            const container = document.getElementById(containerId);\n            if (!container) {\n                console.error(`Container ${containerId} non trouv√©`);\n                return;\n            }\n\n            container.innerHTML = `\n                <div class=\"sunuid-service-unavailable\" style=\"\n                    text-align: center;\n                    padding: 40px 20px;\n                    background: #f8f9fa;\n                    border: 2px dashed #dee2e6;\n                    border-radius: 10px;\n                    color: #6c757d;\n                    font-family: Arial, sans-serif;\n                \">\n                    <div style=\"font-size: 48px; margin-bottom: 20px;\">‚ö†Ô∏è</div>\n                    <h3 style=\"margin: 0 0 10px 0; color: #495057;\">Service Non Disponible</h3>\n                    <p style=\"margin: 0; font-size: 14px;\">\n                        Le service d'authentification est temporairement indisponible.<br>\n                        Veuillez r√©essayer plus tard.\n                    </p>\n                    <div style=\"margin-top: 20px; font-size: 12px; color: #adb5bd;\">\n                        Type: ${String(type).toUpperCase()}\n                    </div>\n                </div>\n            `;\n        }\n\n        /**\n         * Rafra√Æchir un QR code\n         */\n        async refreshQR(containerId, options = {}) {\n            try {\n                // V√©rifier si on a d√©j√† un QR code g√©n√©r√©\n                if (this.currentQRUrl) {\n                    console.log('üîÑ V√©rification du statut du QR code existant...');\n                    \n                    // Option 1: V√©rifier le statut du QR code via l'API\n                    // (√† impl√©menter si l'API le supporte)\n                    \n                    // Option 2: R√©g√©n√©rer le QR code seulement si n√©cessaire\n                    // Pour l'instant, on r√©g√©n√®re pour s'assurer qu'il est √† jour\n                    const result = await this.generateQR(containerId, options);\n                    return result;\n                } else {\n                    console.log('üîÑ Pas de QR code existant, g√©n√©ration d\\'un nouveau...');\n                    const result = await this.generateQR(containerId, options);\n                    return result;\n                }\n            } catch (error) {\n                console.error('Erreur lors du rafra√Æchissement:', error.message);\n                this.displayServiceUnavailable(containerId, this.config.type);\n                throw error;\n            }\n        }\n\n        /**\n         * D√©marrer le rafra√Æchissement automatique\n         */\n        startAutoRefresh(containerId, type, options) {\n            if (!this.config.autoRefresh) return;\n\n            // Arr√™ter le timer existant s'il y en a un\n            if (this.refreshTimer) {\n                clearInterval(this.refreshTimer);\n                console.log('üîÑ Timer de rafra√Æchissement pr√©c√©dent arr√™t√©');\n            }\n\n            this.refreshTimer = setInterval(async () => {\n                try {\n                    console.log('üîÑ Rafra√Æchissement automatique du QR code...');\n                    await this.refreshQR(containerId, type, options);\n                } catch (error) {\n                    console.warn('Erreur lors du rafra√Æchissement automatique:', error);\n                }\n            }, this.config.refreshInterval);\n            \n            console.log(`üîÑ Timer de rafra√Æchissement d√©marr√© (${this.config.refreshInterval}ms)`);\n        }\n\n        /**\n         * D√©marrer le timer de compte √† rebours\n         */\n\n\n        /**\n         * Effectuer une requ√™te API s√©curis√©e\n         */\n        async makeRequest(endpoint, data) {\n            // Validation de s√©curit√©\n            if (!this.isInitialized) {\n                this.logSecurityEvent('REQUEST_BEFORE_INIT', { endpoint });\n                throw new Error('SDK non initialis√©');\n            }\n\n            // V√©rifier les limites de requ√™tes pour l'initialisation s√©curis√©e\n            if (this.config.secureInit) {\n                this.config.requestCount++;\n                if (this.config.requestCount > this.config.maxRequests) {\n                    this.logSecurityEvent('API_REQUEST_LIMIT_EXCEEDED', { \n                        requestCount: this.config.requestCount,\n                        maxRequests: this.config.maxRequests \n                    });\n                    throw new Error('Limite de requ√™tes d√©pass√©e');\n                }\n            }\n\n            // Sanitisation des donn√©es\n            const sanitizedData = this.sanitizeRequestData(data);\n            \n            // Debug: Afficher les donn√©es envoy√©es\n            console.log('üîç Debug makeRequest - endpoint:', endpoint);\n            console.log('üîç Debug makeRequest - apiUrl:', this.config.apiUrl);\n            console.log('üîç Debug makeRequest - url:', `${this.config.apiUrl}${endpoint}`);\n            console.log('üîç Debug makeRequest - data:', JSON.stringify(sanitizedData, null, 2));\n            console.log('üîç Debug makeRequest - secureInit:', this.config.secureInit);\n            console.log('üîç Debug makeRequest - isInitialized:', this.isInitialized);\n            \n            // Utiliser l'endpoint depuis la configuration si disponible\n            const endpointPath = window.SunuIDConfig?.endpoints?.[endpoint.replace('/', '')] || endpoint;\n            const url = `${this.config.apiUrl}${endpointPath}`;\n            \n            // Debug: Afficher l'URL finale\n            console.log('üîç URL finale construite:', url);\n            console.log('üîç EndpointPath:', endpointPath);\n            console.log('üîç SunuIDConfig endpoints:', JSON.stringify(window.SunuIDConfig?.endpoints));\n            \n            // Log de s√©curit√© pour la requ√™te\n            this.logSecurityEvent('API_REQUEST_START', {\n                endpoint: endpointPath,\n                url: url,\n                dataKeys: Object.keys(sanitizedData),\n                secureInit: this.config.secureInit\n            });\n            \n            let retryCount = 0;\n            const maxRetries = this.config.maxRetries;\n            \n            while (retryCount <= maxRetries) {\n                try {\n                    const controller = new AbortController();\n                    const timeoutId = setTimeout(() => controller.abort(), this.config.requestTimeout);\n                    \n                    // Headers minimaux (API SunuID n'accepte que les headers essentiels)\n                    const headers = {\n                        'Content-Type': 'application/json'\n                    };\n\n                    // Note: En mode s√©curis√©, les credentials sont dans le body\n                    // Pas besoin d'ajouter de header sp√©cial pour √©viter les probl√®mes CORS\n                    // if (this.config.secureInit && this.config.token) {\n                    //     headers['X-Secure-Token'] = this.config.token;\n                    // }\n                    \n                    const response = await fetch(url, {\n                        method: 'POST',\n                        headers: headers,\n                        body: JSON.stringify(sanitizedData),\n                        signal: controller.signal\n                    });\n\n                    clearTimeout(timeoutId);\n\n                    if (!response.ok) {\n                        const errorText = await response.text();\n                        let errorData;\n                        try {\n                            errorData = JSON.parse(errorText);\n                        } catch (e) {\n                            errorData = { message: errorText };\n                        }\n                        \n                        this.logSecurityEvent('API_REQUEST_ERROR', {\n                            status: response.status,\n                            statusText: response.statusText,\n                            error: errorData.message\n                        });\n                        \n                        throw new Error(errorData.message || `Erreur HTTP: ${response.status}`);\n                    }\n\n                    const result = await response.json();\n                    \n                    this.logSecurityEvent('API_REQUEST_SUCCESS', {\n                        endpoint: endpointPath,\n                        responseKeys: Object.keys(result)\n                    });\n                    \n                    return result;\n                    \n                } catch (error) {\n                    retryCount++;\n                    \n                    if (error.name === 'AbortError') {\n                        this.logSecurityEvent('API_REQUEST_TIMEOUT', { retryCount });\n                        if (retryCount > maxRetries) {\n                            throw new Error('Timeout de la requ√™te API');\n                        }\n                        continue;\n                    }\n                    \n                    if (retryCount > maxRetries) {\n                        this.logSecurityEvent('API_REQUEST_MAX_RETRIES', { \n                            retryCount, \n                            error: error.message \n                        });\n                        throw error;\n                    }\n                    \n                    // Attendre avant de r√©essayer\n                    await new Promise(resolve => setTimeout(resolve, 1000 * retryCount));\n                }\n            }\n        }\n\n        /**\n         * Sanitisation des donn√©es de requ√™te\n         */\n        sanitizeRequestData(data) {\n            const sanitized = {};\n            \n            // D'abord, copier tous les champs de data\n            for (const [key, value] of Object.entries(data)) {\n                if (typeof value === 'string') {\n                    sanitized[key] = this.sanitizeInput(value);\n                } else if (typeof value === 'object' && value !== null) {\n                    sanitized[key] = this.sanitizeRequestData(value);\n                } else {\n                    sanitized[key] = value;\n                }\n            }\n            \n            // Ensuite, ajouter/√©craser les credentials (API SunuID les attend ici)\n            // Utiliser les vraies valeurs (originales) si disponibles, sinon les valeurs directes\n            sanitized.client_id = this.config.originalClientId || this.config.clientId;\n            sanitized.secret_id = this.config.originalSecretId || this.config.secretId;\n            \n            // Debug: V√©rifier les credentials et les donn√©es\n            console.log('üîç Credentials dans sanitizeRequestData - clientId:', this.config.clientId);\n            console.log('üîç Credentials dans sanitizeRequestData - secretId:', this.config.secretId ? '***' + this.config.secretId.slice(-4) : 'null');\n            console.log('üîç Credentials dans sanitizeRequestData - sanitizedClientId:', sanitized.client_id);\n            console.log('üîç Credentials dans sanitizeRequestData - sanitizedSecretId:', sanitized.secret_id ? '***' + sanitized.secret_id.slice(-4) : 'null');\n            console.log('üîç Credentials dans sanitizeRequestData - data complet:', JSON.stringify(sanitized, null, 2));\n            \n            return sanitized;\n        }\n\n        /**\n         * G√©n√©rer un ID de requ√™te unique\n         */\n        generateRequestId() {\n            return 'req_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n        }\n\n        /**\n         * G√©n√©rer un code de session unique\n         */\n        generateSessionCode() {\n            const timestamp = Date.now();\n            const random = Math.random().toString(36).substr(2, 9);\n            const code = `${timestamp}_${random}`;\n            return btoa(code); // Encoder en base64\n        }\n\n        /**\n         * R√©cup√©rer les informations du partenaire depuis l'API\n         */\n        async fetchPartnerInfo() {\n            try {\n                const response = await this.makeRequest('/debug', {\n                    type: this.config.type,\n                    client_id: this.config.clientId,\n                    secret_id: this.config.secretId\n                });\n\n                console.log('üìã R√©ponse debug API:', response);\n\n                // V√©rifier la structure de la r√©ponse\n                if (response.success && response.data) {\n                    const data = response.data;\n                    \n                    // Essayer de r√©cup√©rer le partner_id depuis diff√©rentes structures possibles\n                    let partnerId = null;\n                    \n                    if (data.partner_id) {\n                        partnerId = data.partner_id;\n                    } else if (data.authentication && data.authentication.auth_test && data.authentication.auth_test.partner_id) {\n                        partnerId = data.authentication.auth_test.partner_id;\n                    } else if (data.auth_test && data.auth_test.partner_id) {\n                        partnerId = data.auth_test.partner_id;\n                    }\n                    \n                    if (partnerId) {\n                        this.config.partnerId = partnerId;\n                        \n                        // R√©cup√©rer le service_id depuis la r√©ponse\n                        if (data.service_id) {\n                            this.config.serviceId = data.service_id;\n                        } else {\n                            // Fallback: utiliser le partner_id comme service_id\n                            this.config.serviceId = partnerId;\n                        }\n                        \n                        // Utiliser le partner_id pour d√©terminer le nom du partenaire\n                        if (partnerId === 21) {\n                            this.config.partnerName = 'Fayma';\n                        } else {\n                            this.config.partnerName = `Partner_${partnerId}`;\n                        }\n                        \n                        console.log('‚úÖ Informations partenaire r√©cup√©r√©es:', {\n                            partnerName: this.config.partnerName,\n                            partnerId: this.config.partnerId,\n                            serviceId: this.config.serviceId\n                        });\n                    } else {\n                        console.warn('‚ö†Ô∏è Partner ID non trouv√© dans la r√©ponse, utilisation du partner_id par d√©faut');\n                        this.config.partnerName = `Partner_${this.config.partnerId || 'unknown'}`;\n                    }\n                } else {\n                    console.warn('‚ö†Ô∏è Structure de r√©ponse invalide, utilisation du partner_id par d√©faut');\n                    this.config.partnerName = `Partner_${this.config.partnerId || 'unknown'}`;\n                }\n            } catch (error) {\n                console.warn('‚ö†Ô∏è Erreur lors de la r√©cup√©ration des informations du partenaire:', error.message);\n                this.config.partnerName = 'Partner_unknown';\n            }\n        }\n\n        /**\n         * Appliquer le th√®me\n         */\n        applyTheme(theme) {\n            const container = document.querySelector('.sunuid-qr-code');\n            if (container) {\n                container.className = `sunuid-qr-code sunuid-theme-${theme}`;\n            }\n        }\n\n        /**\n         * G√©rer les erreurs\n         */\n        handleError(error) {\n            console.error('SunuID SDK Error:', error);\n            \n            if (this.config.onError) {\n                this.config.onError(error);\n            }\n        }\n\n        /**\n         * V√©rifier le statut des connexions\n         */\n        async checkConnections() {\n            const status = {\n                api: false,\n                websocket: false,\n                ready: false\n            };\n            \n            // V√©rifier l'API en utilisant l'endpoint debug avec les credentials\n            try {\n                const testResponse = await fetch(this.config.apiUrl + '/debug', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        type: this.config.type,\n                        client_id: this.config.clientId,\n                        secret_id: this.config.secretId\n                    })\n                });\n                \n                if (testResponse.ok) {\n                    const debugData = await testResponse.json();\n                    // L'API est accessible si on re√ßoit une r√©ponse avec success: true\n                    status.api = debugData.success === true;\n                    console.log('üîç API Status:', status.api ? 'accessible' : 'inaccessible');\n                } else {\n                    status.api = false;\n                    console.log('üîç API Status: HTTP', testResponse.status);\n                }\n            } catch (error) {\n                console.log('üîç Test API √©chou√©:', error.message);\n                status.api = false;\n            }\n            \n            // V√©rifier le WebSocket\n            status.websocket = this.socket && this.socket.connected;\n            \n            // Connexions pr√™tes si API est accessible\n            status.ready = status.api;\n            \n            return status;\n        }\n        \n        /**\n         * Attendre que les connexions soient pr√™tes\n         */\n        async waitForConnections(timeout = 5000) {\n            const startTime = Date.now();\n            \n            while (Date.now() - startTime < timeout) {\n                const status = await this.checkConnections();\n                \n                if (status.ready) {\n                    console.log('‚úÖ Connexions pr√™tes');\n                    return status;\n                }\n                \n                console.log('‚è≥ Attente connexions...', status);\n                await new Promise(resolve => setTimeout(resolve, 1000)); // V√©rification toutes les secondes\n            }\n            \n            throw new Error('Timeout connexions - Impossible de g√©n√©rer le QR code');\n        }\n        \n        /**\n         * Obtenir l'URL du QR code g√©n√©r√©\n         */\n        getQRCode() {\n            // Retourner l'URL du QR code si disponible\n            if (this.currentQRUrl) {\n                return this.currentQRUrl;\n            }\n            \n            // Sinon, retourner une URL par d√©faut ou null\n            return null;\n        }\n\n        /**\n         * Nettoyer les ressources\n         */\n        destroy() {\n            this.stopAutoRefresh();\n            \n            // Fermer la connexion WebSocket\n            if (this.socket) {\n                this.socket.disconnect();\n                this.socket = null;\n                console.log('üåê WebSocket d√©connect√©');\n            }\n            \n            this.isInitialized = false;\n            this.logSecurityEvent('SDK_DESTROY');\n            console.log('SunuID SDK d√©truit');\n        }\n\n        /**\n         * Arr√™ter le rafra√Æchissement automatique\n         */\n        stopAutoRefresh() {\n            if (this.refreshTimer) {\n                clearInterval(this.refreshTimer);\n                this.refreshTimer = null;\n                console.log('üîÑ Timer de rafra√Æchissement arr√™t√©');\n            }\n        }\n\n        /**\n         * Obtenir les logs de s√©curit√©\n         */\n        getSecurityLogs() {\n            return window.SunuIDSecurityLogs || [];\n        }\n\n        /**\n         * Nettoyer les logs de s√©curit√©\n         */\n        clearSecurityLogs() {\n            window.SunuIDSecurityLogs = [];\n            this.logSecurityEvent('SECURITY_LOGS_CLEARED');\n        }\n\n        /**\n         * Afficher un loader pendant le scan du QR code\n         */\n        showQRLoader() {\n            console.log('üîÑ Affichage du loader - Scan QR initi√©');\n            \n            // Chercher le conteneur QR dans diff√©rents IDs possibles\n            const containerIds = ['qr-area', 'qr-container', 'sunuid-qr-container'];\n            let container = null;\n            \n            for (const id of containerIds) {\n                container = document.getElementById(id);\n                if (container) break;\n            }\n            \n            if (!container) {\n                console.warn('‚ö†Ô∏è Conteneur QR non trouv√© pour afficher le loader');\n                return;\n            }\n            \n            // Remplacer le contenu par un loader anim√©\n            container.innerHTML = `\n                <div style=\"\n                    text-align: center;\n                    padding: 40px 20px;\n                    background: #f8f9fa;\n                    border: 2px solid #007bff;\n                    border-radius: 10px;\n                    color: #007bff;\n                    font-family: Arial, sans-serif;\n                \">\n                    <div style=\"\n                        width: 60px;\n                        height: 60px;\n                        border: 4px solid #e3f2fd;\n                        border-top: 4px solid #007bff;\n                        border-radius: 50%;\n                        animation: spin 1s linear infinite;\n                        margin: 0 auto 20px auto;\n                    \"></div>\n                    <h3 style=\"margin: 0 0 10px 0; color: #007bff;\">üîç Scan en cours...</h3>\n                    <p style=\"margin: 0; font-size: 14px;\">\n                        Veuillez patienter pendant la v√©rification de votre identit√©.\n                    </p>\n                    <div style=\"margin-top: 15px; font-size: 12px; color: #6c757d;\">\n                        ‚è±Ô∏è Traitement en cours...\n                    </div>\n                </div>\n                <style>\n                    @keyframes spin {\n                        0% { transform: rotate(0deg); }\n                        100% { transform: rotate(360deg); }\n                    }\n                </style>\n            `;\n            \n            console.log('‚úÖ Loader affich√© avec succ√®s');\n        }\n\n        /**\n         * Extraire les donn√©es d'authentification du format WebSocket\n         */\n        extractAuthDataFromWebSocket(websocketData) {\n            console.log('üîç Extraction des donn√©es d\\'authentification du WebSocket:', websocketData);\n            \n            // Si les donn√©es sont d√©j√† dans le bon format (callback), les retourner directement\n            if (websocketData.token && websocketData.session_id) {\n                console.log('‚úÖ Donn√©es d√©j√† au bon format (callback)');\n                return websocketData;\n            }\n            \n            // Si c'est un format WebSocket, extraire les donn√©es de responseData\n            if (websocketData.responseData) {\n                console.log('‚úÖ Format WebSocket d√©tect√©, extraction de responseData');\n                console.log('üîç Contenu complet de responseData:', websocketData.responseData);\n                console.log('üîç Cl√©s disponibles dans responseData:', Object.keys(websocketData.responseData));\n                \n                // Les donn√©es d'authentification sont dans responseData.data\n                const responseData = websocketData.responseData;\n                const authDataObj = responseData.data || responseData;\n                \n                console.log('üîç Donn√©es d\\'authentification dans data:', authDataObj);\n                console.log('üîç Cl√©s disponibles dans data:', Object.keys(authDataObj));\n                \n                // Debug des sous-objets qui pourraient contenir le token\n                if (authDataObj.callback_data) {\n                    console.log('üîç Contenu de callback_data:', authDataObj.callback_data);\n                }\n                if (authDataObj.session_data) {\n                    console.log('üîç Contenu de session_data:', authDataObj.session_data);\n                }\n                if (authDataObj.user_data_sent) {\n                    console.log('üîç Contenu de user_data_sent:', authDataObj.user_data_sent);\n                }\n                \n                const authData = {\n                    token: authDataObj.token || authDataObj.auth_token || authDataObj.jwt_token || \n                           (authDataObj.callback_data && authDataObj.callback_data.token) ||\n                           (authDataObj.session_data && authDataObj.session_data.token) ||\n                           (authDataObj.user_data_sent && authDataObj.user_data_sent.token),\n                    session_id: authDataObj.session_id || authDataObj.sessionId || authDataObj.session ||\n                               (authDataObj.callback_data && authDataObj.callback_data.session_id) ||\n                               (authDataObj.session_data && authDataObj.session_data.session_id),\n                    user_id: authDataObj.user_id || authDataObj.userId || authDataObj.user,\n                    partner_id: authDataObj.partner_id || authDataObj.partnerId || authDataObj.partner,\n                    type: authDataObj.type,\n                    timestamp: authDataObj.timestamp || responseData.timestamp || websocketData.timestamp,\n                    signature: authDataObj.signature,\n                    user_info: authDataObj.user_info || authDataObj.userInfo || authDataObj.user_data ||\n                              (authDataObj.user_data_sent && authDataObj.user_data_sent.user_info),\n                    redirect_url: authDataObj.redirect_url || authDataObj.redirectUrl || authDataObj.redirect\n                };\n                \n                console.log('üìã Donn√©es d\\'authentification extraites:', authData);\n                return authData;\n            }\n            \n            // Fallback : essayer d'extraire directement des champs principaux\n            console.log('‚ö†Ô∏è Format non reconnu, tentative d\\'extraction directe');\n            return {\n                token: websocketData.token || websocketData.auth_token,\n                session_id: websocketData.session_id || websocketData.sessionId,\n                user_id: websocketData.user_id || websocketData.userId,\n                partner_id: websocketData.partner_id || websocketData.partnerId,\n                type: websocketData.type,\n                timestamp: websocketData.timestamp,\n                signature: websocketData.signature,\n                user_info: websocketData.user_info || websocketData.userInfo,\n                redirect_url: websocketData.redirect_url || websocketData.redirectUrl\n            };\n        }\n\n        /**\n         * Afficher un message de succ√®s apr√®s authentification\n         */\n        showSuccessMessage(data) {\n            console.log('‚úÖ Affichage du message de succ√®s');\n            \n            // Chercher le conteneur QR dans diff√©rents IDs possibles\n            const containerIds = ['qr-area', 'qr-container', 'sunuid-qr-container'];\n            let container = null;\n            \n            for (const id of containerIds) {\n                container = document.getElementById(id);\n                if (container) break;\n            }\n            \n            if (!container) {\n                console.warn('‚ö†Ô∏è Conteneur QR non trouv√© pour afficher le message de succ√®s');\n                return;\n            }\n            \n            // Extraire les informations utilisateur\n            const userInfo = data.user_info || {};\n            const userName = userInfo.name || userInfo.username || 'Utilisateur';\n            const userEmail = userInfo.email || '';\n            \n            // Remplacer le contenu par un message de succ√®s\n            container.innerHTML = `\n                <div style=\"\n                    text-align: center;\n                    padding: 40px 20px;\n                    background: #d4edda;\n                    border: 2px solid #28a745;\n                    border-radius: 10px;\n                    color: #155724;\n                    font-family: Arial, sans-serif;\n                \">\n                    <div style=\"\n                        width: 60px;\n                        height: 60px;\n                        background: #28a745;\n                        border-radius: 50%;\n                        display: flex;\n                        align-items: center;\n                        justify-content: center;\n                        margin: 0 auto 20px auto;\n                        font-size: 30px;\n                        color: white;\n                    \">‚úÖ</div>\n                    <h3 style=\"margin: 0 0 10px 0; color: #155724;\">üéâ Authentification r√©ussie !</h3>\n                    <p style=\"margin: 0 0 15px 0; font-size: 16px; font-weight: bold;\">\n                        Bienvenue, ${userName} !\n                    </p>\n                    ${userEmail ? `<p style=\"margin: 0 0 15px 0; font-size: 14px; color: #6c757d;\">${userEmail}</p>` : ''}\n                    <p style=\"margin: 0; font-size: 14px;\">\n                        Votre identit√© a √©t√© v√©rifi√©e avec succ√®s.\n                    </p>\n                    <div style=\"margin-top: 20px; font-size: 12px; color: #6c757d;\">\n                        üîÑ Redirection en cours...\n                    </div>\n                </div>\n            `;\n            \n            console.log('‚úÖ Message de succ√®s affich√©');\n        }\n\n        /**\n         * G√©rer le callback SunuID\n         */\n        handleCallback() {\n            const urlParams = new URLSearchParams(window.location.search);\n            \n            // V√©rifier si c'est un callback SunuID\n            if (urlParams.has('token') && urlParams.has('session_id')) {\n                console.log('üîó Callback SunuID d√©tect√©');\n                \n                // R√©cup√©rer les param√®tres\n                const callbackData = {\n                    token: urlParams.get('token'),\n                    state: urlParams.get('state'),\n                    session_id: urlParams.get('session_id'),\n                    user_id: urlParams.get('user_id'),\n                    partner_id: urlParams.get('partner_id'),\n                    type: urlParams.get('type'),\n                    timestamp: urlParams.get('timestamp'),\n                    signature: urlParams.get('signature')\n                };\n                \n                console.log('üìã Donn√©es callback:', callbackData);\n                \n                // Valider le callback\n                this.validateCallback(callbackData);\n                \n                // Traiter l'authentification\n                this.processAuthentication(callbackData);\n                \n                return true;\n            }\n            \n            return false;\n        }\n\n        /**\n         * Valider le callback\n         */\n        validateCallback(data) {\n            console.log('üîí Validation du callback...');\n            \n            // V√©rifier l'√©tat de s√©curit√©\n            if (data.state && data.state !== this.config.state) {\n                console.error('‚ùå √âtat de s√©curit√© invalide');\n                throw new Error('√âtat de s√©curit√© invalide');\n            }\n            \n            // V√©rifier la signature (si configur√©e)\n            if (data.signature && this.config.verifySignature) {\n                if (!this.verifySignature(data)) {\n                    console.error('‚ùå Signature invalide');\n                    throw new Error('Signature invalide');\n                }\n            }\n            \n            // V√©rifier l'expiration\n            if (data.timestamp && this.isExpired(data.timestamp)) {\n                console.error('‚ùå Token expir√©');\n                throw new Error('Token expir√©');\n            }\n            \n            console.log('‚úÖ Callback valid√© avec succ√®s');\n        }\n\n        /**\n         * Traiter l'authentification\n         */\n        processAuthentication(data) {\n            console.log('üîê Traitement de l\\'authentification...');\n            \n            try {\n                // D√©coder le JWT token\n                const decodedToken = this.decodeJWT(data.token);\n                \n                // V√©rifier les donn√©es utilisateur\n                const userData = {\n                    user_id: decodedToken.user_id || data.user_id,\n                    session_id: decodedToken.session_id || data.session_id,\n                    partner_id: decodedToken.partner_id || data.partner_id,\n                    type: decodedToken.type || data.type,\n                    iat: decodedToken.iat,\n                    exp: decodedToken.exp\n                };\n                \n                console.log('üë§ Donn√©es utilisateur:', userData);\n                \n                // √âmettre l'√©v√©nement de succ√®s\n                this.emitWebSocketEvent('authentication_success', {\n                    userData: userData,\n                    callbackData: data,\n                    timestamp: Date.now()\n                });\n                \n                // Appeler le callback de succ√®s\n                if (this.config.onAuthenticationSuccess) {\n                    this.config.onAuthenticationSuccess(userData, data);\n                }\n                \n                // Rediriger si configur√©\n                if (this.config.redirectAfterSuccess) {\n                    this.redirectAfterSuccess(userData);\n                }\n                \n                console.log('‚úÖ Authentification trait√©e avec succ√®s');\n                \n            } catch (error) {\n                console.error('‚ùå Erreur lors du traitement:', error);\n                \n                // Appeler le callback d'erreur\n                if (this.config.onAuthenticationError) {\n                    this.config.onAuthenticationError(error, data);\n                }\n                \n                throw error;\n            }\n        }\n\n        /**\n         * D√©coder un JWT token\n         */\n        decodeJWT(token) {\n            try {\n                // D√©codage simple du JWT (sans v√©rification de signature)\n                const parts = token.split('.');\n                if (parts.length !== 3) {\n                    throw new Error('Format JWT invalide');\n                }\n                \n                const payload = parts[1];\n                const decoded = JSON.parse(atob(payload));\n                \n                return decoded;\n            } catch (error) {\n                console.error('‚ùå Erreur d√©codage JWT:', error);\n                throw new Error('Token JWT invalide');\n            }\n        }\n\n        /**\n         * V√©rifier la signature\n         */\n        verifySignature(data) {\n            // Impl√©mentation basique - √† adapter selon vos besoins\n            const expectedSignature = this.generateSignature(data);\n            return data.signature === expectedSignature;\n        }\n\n        /**\n         * G√©n√©rer une signature\n         */\n        generateSignature(data) {\n            // Impl√©mentation basique - √† adapter selon vos besoins\n            const payload = `${data.token}.${data.state}.${data.session_id}.${data.timestamp}`;\n            return btoa(payload).slice(0, 12); // Signature simplifi√©e\n        }\n\n        /**\n         * V√©rifier l'expiration\n         */\n        isExpired(timestamp) {\n            const currentTime = Math.floor(Date.now() / 1000);\n            const tokenTime = parseInt(timestamp);\n            const maxAge = this.config.tokenMaxAge || 300; // 5 minutes par d√©faut\n            \n            return (currentTime - tokenTime) > maxAge;\n        }\n\n        /**\n         * Rediriger apr√®s succ√®s\n         */\n        redirectAfterSuccess(userData) {\n            let redirectUrl = this.config.redirectAfterSuccess;\n            \n            // Remplacer les variables dans l'URL\n            redirectUrl = redirectUrl\n                .replace('{user_id}', userData.user_id)\n                .replace('{session_id}', userData.session_id)\n                .replace('{partner_id}', userData.partner_id)\n                .replace('{type}', userData.type);\n            \n            console.log('üîÑ Redirection vers:', redirectUrl);\n            \n            // Redirection avec d√©lai pour permettre les callbacks\n            setTimeout(() => {\n                window.location.href = redirectUrl;\n            }, 100);\n        }\n\n        /**\n         * G√©n√©rer un √©tat de s√©curit√©\n         */\n        generateState() {\n            const state = 'sunuid_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n            this.config.state = state;\n            return state;\n        }\n    }\n\n    // Exposer la classe globalement\n    window.SunuID = SunuID;\n    window.sunuidInstance = null;\n\n    // Fonction d'initialisation globale\n    window.initSunuID = function(config) {\n        try {\n            window.sunuidInstance = new SunuID(config);\n            return window.sunuidInstance;\n        } catch (error) {\n            console.error('Erreur lors de l\\'initialisation de SunuID:', error);\n            throw error;\n        }\n    };\n\n})(window); "],"names":["window","_window$SunuIDConfig","DEFAULT_CONFIG","apiUrl","SunuIDConfig","clientId","secretId","type","partnerName","theme","language","autoRefresh","refreshInterval","autoInit","onSuccess","onError","onStatusUpdate","onExpired","enableSecurityLogs","validateInputs","maxRetries","requestTimeout","secureInit","secureInitUrl","_window$SunuIDConfig2","_window$SunuIDConfig3","includes","replace","token","forceRemoteServer","useLocalFallback","redirectAfterSuccess","verifySignature","tokenMaxAge","onAuthenticationSuccess","onAuthenticationError","state","SunuID","config","arguments","length","undefined","_classCallCheck","_objectSpread","qrCode","refreshTimer","isInitialized","socket","initPromise","console","log","_createClass","key","value","_init","_asyncToGenerator","_regenerator","m","_callee","w","_context","p","n","a","_initInProgress","_doInit","f","init","apply","_doInit2","_callee2","_t","_context2","handleCallback","validateSecurityParams","logSecurityEvent","fetchPartnerInfo","obfuscateCredentials","slice","initWebSocket","v","error","message","_secureInit","_callee3","initData","response","result","decodedToken","_t2","_context3","fetch","method","headers","body","JSON","stringify","ok","Error","concat","status","json","success","data","api_url","decodeSecureToken","client_id","secret_id","expiresIn","expires_in","maxRequests","max_requests","requestCount","parts","split","_parts","_slicedToArray","payload","signature","decodedPayload","atob","tokenData","parse","exp","Date","now","_this","io","warn","setTimeout","ip","getClientIP","query","userId","username","transports","on","id","connected","reason","handleQRStatusUpdate","handleQRScanSuccess","handleQRExpired","showQRLoader","onAny","eventName","callback","_len","args","Array","_key","getTypeName","errors","push","isValidUrl","join","string","url","URL","protocol","_","event","securityLog","timestamp","toISOString","userAgent","navigator","location","href","SunuIDSecurityLogs","originalClientId","originalSecretId","clientIdDisplay","secretIdDisplay","sanitizeInput","input","trim","authData","extractAuthDataFromWebSocket","processAuthentication","showSuccessMessage","emitWebSocketEvent","emit","getWebSocketStatus","forceWebSocketInit","_generateQR","_callee4","containerId","options","connectionStatus","socketId","qrContent","qrImageUrl","isLocal","_args4","_t3","_t4","_context4","waitForConnections","makeRequest","label","qrCodeUrl","startsWith","qr_url","qrUrl","image_url","imageUrl","currentQRUrl","sessionId","displayQRCode","startAutoRefresh","stack","hostname","displayServiceUnavailable","generateQR","_generateCustomQR","_callee5","imageBaseUrl","_args5","_t5","_context5","qrcode","code","service_id","generateCustomQR","_x","_x2","_generateAuthQR","_callee6","_args6","_context6","generateAuthQR","_x3","_generateKYCQR","_callee7","originalType","_args7","_context7","generateKYCQR","_x4","_generateSignatureQR","_callee8","_args8","_context8","generateSignatureQR","_x5","_checkQRStatus","_callee9","_t6","_context9","serviceId","handleError","checkQRStatus","_x6","_generateQRWithContent","_callee0","content","localQRUrl","_args0","_t7","_context0","generateQRLocal","generateQRRemote","displayQRContent","generateQRWithContent","_x7","_x8","_x9","_generateQRLocal","_callee1","_args1","_t8","_context1","encodeURIComponent","_x0","_x1","_x10","_generateQRRemote","_callee10","_args10","_t9","_context10","text","size","_x11","_x12","_x13","container","document","getElementById","typeName","innerHTML","qrElement","createElement","className","appendChild","applyTheme","_generateCustomQRCode","_callee11","qrContainer","_args11","_t0","_context11","generateQRPHP","displayDefaultQR","generateCustomQRCode","_x14","_x15","_generateQRClientSide","_callee12","_this2","canvas","ctx","_context12","ensureQRCodeLibrary","QRCode","width","height","getContext","fillStyle","fillRect","Promise","resolve","reject","toCanvas","margin","color","dark","light","font","textAlign","fillText","dataUrl","toDataURL","showQRInstructions","generateQRClientSide","_x16","_x17","_x18","_generateQRPHP","_callee13","qrGeneratorUrl","requestBody","contentType","responseData","_context13","URLSearchParams","foreground_color","background_color","data_uri","_x19","_x20","_x21","_ensureQRCodeLibrary","_callee14","_context14","script","src","onload","onerror","head","instructionsElement","parentElement","querySelector","statusElement","style","display","classList","add","addLogoToCenter","x","y","logo","Image","logoSize","logoX","logoY","drawImage","displayFallbackImage","String","toUpperCase","_refreshQR","_callee15","_result","_args15","_t1","_context15","refreshQR","_x22","_this3","clearInterval","setInterval","_callee16","_t10","_context16","_makeRequest","_callee17","endpoint","_window$SunuIDConfig4","_window$SunuIDConfig5","_this4","sanitizedData","endpointPath","retryCount","_loop","_ret","_context18","sanitizeRequestData","endpoints","dataKeys","Object","keys","controller","timeoutId","errorText","errorData","_t11","_context17","AbortController","abort","signal","clearTimeout","e","statusText","responseKeys","name","d","_regeneratorValues","_x23","_x24","sanitized","_i","_Object$entries","entries","_Object$entries$_i","_typeof","generateRequestId","Math","random","toString","substr","generateSessionCode","btoa","_fetchPartnerInfo","_callee18","partnerId","_t12","_context19","partner_id","authentication","auth_test","_checkConnections","_callee19","testResponse","debugData","_t13","_context20","api","websocket","ready","checkConnections","_waitForConnections","_callee20","timeout","startTime","_args21","_context21","getQRCode","destroy","stopAutoRefresh","disconnect","getSecurityLogs","clearSecurityLogs","containerIds","_i2","_containerIds","websocketData","session_id","authDataObj","callback_data","session_data","user_data_sent","auth_token","jwt_token","session","user_id","user","partner","user_info","userInfo","user_data","redirect_url","redirectUrl","redirect","_i3","_containerIds2","userName","userEmail","email","urlParams","search","has","callbackData","get","validateCallback","isExpired","decodeJWT","userData","iat","decoded","expectedSignature","generateSignature","currentTime","floor","tokenTime","parseInt","maxAge","generateState","sunuidInstance","initSunuID"],"mappings":"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"}